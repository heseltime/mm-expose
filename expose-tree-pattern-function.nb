%!PS-Adobe-3.0
%%Creator: cairo 1.17.2 (https://cairographics.org)
%%CreationDate: Wed Jul 26 22:00:27 2023
%%Pages: 6
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    496697,      11404]
NotebookOptionsPosition[    477323,      11122]
NotebookOutlinePosition[    477727,      11138]
CellTagsIndexPosition[    477684,      11135]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
 } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closep,

 bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind de,

Cell["\<\
The present author has implemented the following  set of Wolfram Language \
functions in a recent Wolfram Community project (Heseltine, 2023) and would \
like to expand upon the underlying concepts and the language used, in an \
effort to further his own understanding and present a helpful guide to the \
language and its functional programming paradigm support.\
\>", "Text",
 CellChangeTimes->{{3.898926480398237*^9, 3.8989264815805893`*^9}, {
  3.898928980507464*^9, 3.8989289812717247`*^9}, {3.8989471619119115`*^9, 
  3.898947178296392*^9}, {3.8993915779549255`*^9, 3.8993915853459244`*^9}, {
  3.8993916396963806`*^9, 3.899391734310748*^9}, {3.899391770472*^9, 
  3.8993917803485565`*^9}, {3.899392486138496*^9, 3.899392524338971*^9}, {
  3.89939255657826*^9, 3.899392557046126*^9}, {3.899394186750265*^9, 
  3.8993941958829813`*^9}},ExpressionUUID->"bb3bad3f-d260-4a39-928d-\
b83d3785d126"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"proofID", "[", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"___", ",", 
         RowBox[{"{", 
          RowBox[{"ID", ",", "id_"}], "}"}], ",", "___"}], "}"}], ",", 
       "___"}], "]"}], "]"}], ":=", "id"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"subproofs", "[", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"___", ",", 
        RowBox[{"{", 
         RowBox[{"Proofs", ",", 
          RowBox[{"OpenerView", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Arguments", ",", 
              RowBox[{"Column", "[", 
               RowBox[{"subproofs_", ",", "___"}], "]"}]}], "}"}], ",", 
            "___"}], "]"}]}], "}"}], ",", "___"}], "}"}], ",", "___"}], "]"}],
     "]"}], ":=", "subproofs"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subproofs", "[", "proof_", "]"}], ":=", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"getLeanTree", "[", "proof_", "]"}], ":=", 
  RowBox[{"Tree", "[", 
   RowBox[{
    RowBox[{"proofID", "[", "proof", "]"}], ",", 
    RowBox[{"getLeanTree", "/@", 
     RowBox[{"subproofs", "[", "proof", "]"}]}], ",", 
    RowBox[{"TreeElementLabelStyle", "->", 
     RowBox[{"All", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"White", ",", "16", ",", 
        RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}]}], "]"}]}]}], 
    ",", 
    RowBox[{"TreeElementStyle", "->", 
     RowBox[{"All", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
        RowBox[{"RGBColor", "[", "\"\<#B6094A\>\"", "]"}]}], "]"}]}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.899391875338323*^9, 3.899391878129467*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"3fc6da08-13aa-400e-bb92-92ec725b23c4"],

Cell[TextData[{
 "An expos\[EAcute] of the concepts follows, drawing on all three functions \
(one function is overloaded to produce two forms of the same function), but \
first an introduction of both the problem space and language will be helpful. \
The complete code base is available as a ",
 ButtonBox["G \.08itHub repository",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/heseltime/mm-lean"], None},
  ButtonNote->"https://github.com/heseltime/mm-lean"],
 "."
}], "Text",
 CellChangeTimes->{{3.8993917443749266`*^9, 3.899391818574335*^9}, {
  3.8993918903478737`*^9, 3.899391906661075*^9}, {3.8993919868583117`*^9, 
  3.899391995529125*^9}, {3.8993986139098587`*^9, 
  3.8993986423423557`*^9}},ExpressionUUID->"c79ca2fc-beb0-483f-8755-\
7878ecea51fb"],

Cell[CellGroupData[{

t
Encoding 109 /m put
Encoding 110 /n put
Encoding 111 /o put
Encoding 112 /p put
Encoding 113 /q put
Encoding 114 /r put
Encoding 115 /s put
Encoding 116 /t put
Enc,

 117 /u put
Encoding 118 /v put
Encoding 119 /w put
Encoding 120 /x put
Encoding 121 /y put
Encoding 122 /z put
Encoding 146 /quoteright put
Encoding 147 /quotedblleft put
Encoding 148 /quotedblright put
Encoding 233 /eacute put
Encoding 246 /odieresis put
/CharStrings 75 dict dup begin
/.notdef 0 def
/E 1 def
/x 2 def
/p 3 def
/o 4 def
/s 5 def
/eacute 6 def
/colon 7 def
/space 8 def
/A 9 def
/T 10 def
/r 11 def
/e 12 def
/P 13 def
/a 14 def
/t 15 def
/n 16 def
/F 17 def
/u 18 def
/c 19 def
/i 20 def
/M 21 def
/h 22 def
/m 23 def
/quotedblleft 24 def
/W 25 def
/f 26 def
/l 27 def
/b 28 def
/comma 29 def
/quotedblright 30 def
/S 31 def
/w 32 def
/g 33 def
/O 34 def
/odieresis 35 def
/C 36 def
/H 37 def
/period 38 def
/d 39 def
/L 40 def
/hyphen 41 def
/y
}, Open  ]],

Cell[CellGroupData[{

def
/two 46 def
/zero 47 def
/three 48 def
/parenright 49 def
/v 50 def
/G 51 def
/I 52 def
/D 53 def
/N 54 def
/R 55 def
/q 56 def
/one 57 def
/percent 58 def
/underscore ,

Cell["\<\
Wolfram Research (2023) describes the language on a high level like this: \
\[OpenCurlyDoubleQuote]The Wolfram Language is a highly developed \
knowledge-based language that unifies a broad range of programming paradigms \
and uses its unique concept of symbolic programming to add a new level of \
flexibility to the very concept of programming.\[CloseCurlyDoubleQuote] Also, \
on the point of functional programming: \[OpenCurlyDoubleQuote]Functional \
programming is a highly developed and deeply integrated core feature of the \
Wolfram Language, made dramatically richer and more convenient through the \
symbolic nature of the language.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.898926619544454*^9, 3.8989266258192263`*^9}, {
  3.898928973454784*^9, 3.898928974312503*^9}, {3.8993922151923666`*^9, 
  3.8993922161321635`*^9}, {3.899392260679282*^9, 
  3.899392344131775*^9}},ExpressionUUID->"00820163-b490-4547-9ce3-\
524d76d24e61"],

04d00b800004558
b800012f1bb9000100113e59b800004558b800002f1bb9000000053e59b8000110b900040002
f4ba000800010000111239b800082fb900060001f4b8000010b900090002f430313311211521
153315231521155a017afed9f9f90131029046ce47ee47000001000e000001b001e600190049
00b800004558b800022f1bb9000200093e59b800004558b800002f1bb9000000053e59b80002
10b8000cd0b8000010b80010d0ba0007000c0010111239ba0015000200001112393031333727
33171e0117333e013f0133071723,

Cell[CellGroupData[{

b180d040b160b3b5693
9e59470d1a0e040d180c42fee86b1429141429146bf1f571162c15152b17710000020052ff33
01fb01f200160027007e00b800004558b800072f1bb9000700093e59b800004558b800112f1b
b9001100053e59b800004558b800002f1bb9000000073e5,

Cell["\<\
Going back to our object of interest, here is the first of the set of \
functions we are presently studying.\
\>", "Text",
 CellChangeTimes->{{3.8989290385666356`*^9, 3.8989290979226265`*^9}, {
  3.899398662183958*^9, 
  3.8993986939288297`*^9}},ExpressionUUID->"7d1c0b6f-e258-406a-a9ac-\
74fb44dbddfa"],

323e0235342e0223220607151e0152440703214f2b2f483019223a4c2a224322
02771e3325150e1f31221f3f24213ecd02b3381c2823415b393e6144231e1a55a401061b3148
2d28422f1a2220ff1c170002002efff401f001f200130027003500b800004558b8000a2f1bb9
000a00093e59b800004558b800002f1bb9000000053e59b900140001f4b8000a10b9001e0001
f4303105222e0235343e0233321e0215140e0227323e0235342e0223220e0215141e02010f2d
513e25253e512d2d513e25253e512d1f3425141425341f1f3425141425340c22415f3c3d5f42
2222425f,

Cell["\<\
They use lists (demarcated with curly brackets, here in a nested fashion) in \
constructing a pattern, which will be discussed in a later section, but lists \
can also be generated: Lists are central, general objects in the Wolfram \
Language since they can be made to represent other objects. 

Internally, they are, of course, functions.\
\>", "Text",
 CellChangeTimes->{{3.8989266617404666`*^9, 3.8989268510934105`*^9}, {
  3.898929088206012*^9, 3.898929147230256*^9}, {3.8993987134182673`*^9, 
  3.8993987166282096`*^9}, {3.8994724544460382`*^9, 
  3.899472465506562*^9}},ExpressionUUID->"77746dc5-777d-49fa-8831-\
310190cd9c0b"],

Cell[CellGroupData[{

0000000200030000021d029000090011
005400b800004558b8000b2f1bb9000b00113e59b800004558b800112f1bb9001100053e59b8
00004558b8000e2f1bb9000e00053e59ba00100011000b111239b800102fb900010001f4ba00
070011000b1112393031130733272e0127230e010313331323272307cb1fc51f122010040f20
dade5ed,

ef3f016f6464376d39396dfe5a0290fd70c8c80000000001001c000001fc0290
0007003300b800004558b800032f1bb9000300113e59b800004558b800002f1bb9000000053e
59b8000310b900010002f4b80006d030313311233521152311e2c601e0c6024a4646fdb60001
00520000015e01f20011004900b800004558b800012f1bb9000100093e59b800004558b80000
2f1bb9000000053e59ba000300010000111239b8000110b80007d0b800072fb8000ddcb80003
10b90010000
}, Open  ]],

e01333217072e0123220607115244070319472a1d17100c
140f1f431901e6582e360a480404323efec800000002002efff401ca01f2001c0025005100b8
00004558b8000a2f1bb9000a00093e59b800004558b800002f1bb9000000053e59ba0013000a
0000111239b800132fb8000010b900160001f4b8001310b9001e0001f4b8000a10b900210001
f4303105222e0235343e0233321e0215140607211e0133323637170e010321342623220e0201
1731553f24253d4e2a2e493,

Cell[CellGroupData[{

cb01043f391a2f26190c2341
5e3c3c5f4223203c54340d19094e5b151136141e01264a4d1427380000000002005a0000020b
0290000e0017004300b800004558b800012f1bb9000100113e59b800004558b800002f1bb900
0000053e59ba000d000100001112,

00d2fb900100001f4b8000110b900170002f4303133
1133321e0215140e022b0119013332363534262b015abb375b4024234059366c62565357565e
0290142d4a36344c3219fefc01484146473700020034fff401b101f2001b0027007100b80000
4558b800122f1bb9001200093e59b800004
}, Open  ]],

000053e59ba000600120000
111239b800062fb8001210b9000b0001f4b8000010b80017d0b800172fba0018000000121112
39b8000010b9001c0001f4b8001810b9001f0001f4b8000610b900200001f43031,

Cell[CellGroupData[{

273e0133321615112327230e0127323637350e03151416c23d518e9c09
16271e2a4a1d2022623b5950440703235016233e233d533317320c4842505511172c22152014
3916296d5bfed63a1d294221208708161e27172a240000010018fff40145026e0019004f007c
b8000b2f18b800004558b800092f1b,

900093e59b800004558b800002f1bb9000000053e
59b8000910b900060001f4b8000910b8000dd0b8000610b8000ed0b8000010b900130001f430
3117222e02351123353f01331533152311141633323637170e01eb2735210e484c0a45838321
2a0d1e0c10142f0c182a3c24010d3e05888843fef22d3108053e070b0000000100
}, Open  ]],

4005b00b800004558b800012f1bb9000100093e59b800004558b800002f1bb9000000
053e59ba000300010000111239b8000110b80007d0b800072fb8000010b8000cd0b8000c2fb8
000710b900100001f4b8000310b900130001f4303133113317333e0133321615112311342623
2206071152440703234d334d47522c30263a2501e646232f605efecc0129453d2625fea00000
0001,

Cell[CellGroupData[{

0004558b800012f1bb9000100113e59b800004558b8
00002f1bb9000000053e59b8000110b900040002f4ba000800010000111239b800082fb90006
0001f43031331121152115331523115a017afed9fafa029046de46feda0000000001004bfff4
01ce01e60014005300b800004558b800042f1bb9000400093e59b800004558b800002f1bb900
0000053e59b900090001f4ba001100040000111239b8001110b9000c0001f4b8000410b8000d
d0b8000,

000fd0b8000f2f3031172226351133111416333236371133112327230e01e04e
47532b30263a2352440703224b0c605e0134fed7453d272b0159fe1a4c2830000001002efff4
01af01f20021003900b800004558b8000a2f1bb9000a00093e59b800004558b800002f1bb900
0000053e59b8000a10b900110001f4b8000010b9001b0001f4303105222e0235343e
}, Open  ]],

3220e0215141e0233323637170e01011230543d232640552f30441a2a152f1d2138
2817162738212239172421500c22415f3c3d5f422222173613181b32452a2a44311b1d14371d
210000020043000000b502b40003000f003500b800004558b800012f1bb9000100093e59b800
004558b800002f1bb9000000053e59b8000110b80004d0b800042fb8000ad030313311331103
22263534363332161514065252281821211818212101e6fe1a024a1e17181d1,

1e000000
0001005a0000027d0290001d005d00b800004558b800012f1bb9000100113e59b800004558b8
00002f1bb9000000053e59ba0007000d0012111239ba0007000c000d111239b8000110b8000b
d0b8000010b8000ed0ba001600000001111239ba0019000100001112393031331133131e0117
333e01371333112311343637230703230327231e0115115a647e0c170c040c150c7c654e0803
04347c377c340403070290fea2224522224522015efd7001692c6a2c95feac0154952c6a2cfe
970000,

Cell[CellGroupData[{

800004558b800072f1bb9000700093e59b8000045
58b800012f1bb9000100133e59b800004558b800002f1bb9000000053e59ba00040007000011
1239b8000cd0b8000710b900100001f4b8000410b900130001f4303133113315073e01333216
1511231134262322060711525203234c334d4752,

63a2502c8c264212f605efecc012945
3d2625fea00000010052000002f101f20021008900b800004558b800012f1bb9000100093e59
b800004558b800002f1bb9000000053e59ba000300010000111239b8000110b80007d0b80007
2fba000a00010000111239b8000dd0b8000d2fb8000010b8001ad0b8001a2fb80012d0b80012
2fb8000d10b900160001f4b8000a10b900180001f4b8000710b9001e0001f4b8000310b90020
0001f4303133113317333e01333216173e013332161511231134262322071123113426232207
11524407032
}, Open  ]],

b49522c2e3743522c2f374301e646232f312c2a33605efe
cc0129453d4bfea00129453d4bfea0000000ffff003901ac016b02b80026004c00000007004c
00b0000000010017000002fa02900021007600b800004558b800012f1bb9000100113e59b800
004558b8000b2f1bb9000b00113e59b800004558b800152f1bb9001500113e59b800004558b8
00002f1bb9000000053e59b800004558b800182f1bb9001800053e59ba000600010000111239
ba001000150018111239ba001d0000000b11123930313303331,

Cell[CellGroupData[{

33e013713330323032e0127230e010703a28b5645091409040b180b5b4c5b0c180c040912
0a4550886463090f0804081108610290fe9b3668363669350165fe9b346a363669350165fd70
018b264926264926fe7500000001001e0000013f02d40015005600b800004558b800112f1bb9
001100093e59b800004558b800082f1bb9000800133e59b800004558b800152f1bb900150005
3e59b8001110b900140001f4b80001d0b8001110b80004d0b8000810b9000e0001f430313311
23353735343633321617072623221d01331523116042424549172911121b1c44676701a33e05
4d4b5609073f0c5e4d43fe5d00010052fff400d802c8000f00,

800004558b800042f1bb9
000400133e59b800004558b800002f1bb9000000053e59b900090001f4303117222635113311
1416333a0137170e01a92f28520e090407070b08160c38360266fd941410023e040400000002
0052fff401fb02c800160026007a00b800004558b8000d2f1bb9000d00093e59b800004558b8
00072f1bb9000700133e59b800004558b800002f1bb9000000053e59ba00040000000d111239
b80005d0b800052fba000a000d0000111239b8000010b900170001f4b8000d10b900210001f4
b8000a10b900230001f4b8000410b900240001f4303105222627230723113315073e0133321e
0215140e0227323e0235342e02232207151e0101292249200307425202214e292f483119223a
4c381e3325150e1f31223b47203f0c211d3202c8c2581d2723415b383e624423451b31482d28
422f1a42ff1c170000000001002fff5600c600720011001800b800004558b800062f1bb90006
00053e59b8000cdc303117273e01270623222635343633
}, Open  ]],

010307182324
19202546aa30133f28011d1c1b1f342d4160ffff003f01af017102bb0026003e00000007003e
00b000000001002afff401ef029c0033004900b800004558b8001a2f1bb9001a00113e59b800
004558b800002f1bb9000000053e59b900070002f4ba000f0000001a111239b8001a10b90021
0002f4ba0029001a0000111239303105222627371e0133323635342e022f0,

Cell[CellGroupData[{

3220615141e021f011e0315140e02011045762b32235f334148111d28175e17
3026181f374b2d3b64232d1e492e3743132026145d1c3224151f3a520c342d3a252d3b301923
19140b290a1c28372425402f1a2d24361d21332d1821191308280c1f2937242744331d000000
00010018000002b601e60021005b00b800004558b800012f1bb9000100093e59b800004558b8
00002f1bb9000000053e59ba000600000001111239b8000110b8000bd0b8000010b80018d0b8
000b10b80015d0ba001000180015111239ba001d000100211112393031330333131e0117333e
01371333131e0117333e013713330323032e0127230e0107039f875448080e07040810094b50
4c09110804080e08474e826446090f090408100a4401e6fee72342222243220119fee7234222
2242230119fe1a0105234425254523fefc000003002dff2001ec01f20037004700,

700b8
00004558b800182f1bb9001800093e59b800004558b800002f1bb9000000073e59ba002f0000
0018111239b8002f2fb900500001f4ba0009002f0050111239ba002600180000111239b80026
2fb900380001f4ba001000380026111239b8001810b8001cd0b8001c2fb9001d0001f4b80018
10b900400001f4b8000010b900480001f4303117222e0235343637352e0135343637352e0135
343e02333216173315231e0115140e02232226270e011514163b01321615140e0203323e0235
342623220615141e0213323e023534262b012226270e01151416f62d4a351d26211219221318
271d32432514230ea96411171c3041251226110d1224325e555522405b3915251d103c2b2b3c
101d2521233928163230540e21101a184be0112230201f3817040b271d1f2e0d0414432c2840
2d1807053f11341f273f2b1809080b1b14171e373d223d2e1b01b1101e2b1b363b3b361b2b1e
10fe88111b2413221a0305132a15272e000000020034fff402650
}, Open  ]],

80000
4558b8000a2f1bb9000a00113e59b800004558b800002f1bb9000000053e59b900140002f4b8
000a10b9001e0002f4303105222e0235343e0233321e0215140e0227323e0235342e0223220e
0215141e02014c3e674a29294a673e3e674b29294b673e2c47331c1c33472c2c47331c1c3347
0c30597f4f4f7d572e2f577d4e4f7f5930492647633e3d6244252544623d3e634726ffff002e
fff401f002af0226000400000007004d010f000000010034fff4021b029c0021003900b80000
4558b8000a2f1bb9000a00113e59b800004558b800002f1bb9000000053e59b8000a10b90011
0002f4b8000010b9001b0002f4303105222e0235343e,

21617072e0123220e0215141e02
33323637170e0101523e684d2b2c4e6a3f3c5b1d2d1a422a2f4c361d1d344b2f3048202e2762
0c2e577f504f7e582f3120361c222545623d3e6346262723342d32000001005a000002320290
000b004900b800004558b800012f1bb9000100113e59b800004558b800002f1bb9000000053e
59ba000a00010000111239b8000a2fb900040001f4b8000110b80005d0b8000010b80008d030
313311331121113311231121115a5301315454fecf0290feed0113fd700135fecb0000010041
fff400b80072000b001800b800004558b800002f1bb9000000053e59b80006dc303117222635
34363332161514067d192323191823230c231b1d23231d1b23000002002ffff401d902c80014
0023007a00b800004558b800082f1bb9000800093e59b800004558b8000d2f1bb9000d00133e
59b800004558b800002f1bb9000000053e59ba000b00080000111239b80010d0b800102fba00
1100000008111239b8000010b900150001f4b8001110b900180001f4b8000b10b900190001f4
b8000810b9001c0001f4303117222635343e0233321617273533112327230e0127323637352e
0123220e02151416f85c6d233a4c2a2a3e2004534407031d4b19223c1e1f391e1d332616460c
847a3b5f42241e1a53bbfd38391c29452122fe1c171b31442a58620000000001005a000001cc
02900005002b00b800004558b800012f1bb9000100113e59b800004558b800002f1bb9000000
053e59b900030002f430313311331121155a53011f0290fdb7470001002900db010f011a0003
000d00bb00010001000000042b30313735331529e6db3f3f0001000cff2f01c701e6001c0047
00b800004558b8000c2f1bb9000c00093e59b800004558b800002f1bb9000000073e59b90007
0001f4ba000b0000000c111,

Cell[CellGroupData[{

10b80016d030311722262737
1e013332363f010333131e0117333e01371333030e035a111c0c100814092a350f0bc355630b
190b040b140a5750b70d202c38d105054102053b2d2401e7fef3204722214820010dfdf2243e
2d1a0002ffd8ff2700b502b4000f001b003b00b800004558b8000b2f1bb9000b00093e59b800
004558b800002f1bb9000000073e59b900070001f4b8000b10b80010d0b800102fb80016d030
3117222627371e013332363511331114061322263534363332161514062017240d1109180d24
18523c1418212118172121d908053e0305322d021dfde34a5803231e17181d1d18171e000001
0052000001e602c8000,

00b800004558b800052f1bb9000500093e59b800004558b80001
2f1bb9000100133e59b800004558b800002f1bb9000000053e59b800004558b800092f1bb900
0900053e59ba000300010000111239ba000700050009111239ba000a00010009111239303133
113311331333071323270715525103cf5ba3b95a8e5b02c8fe1e0100c3feddea6a8000000001
0052ff50010902dc000d000b00ba0006000000032b3031172e0135343637170e0115141617d6
3e46463e333a39393ab064de8484dd651860db7373db600000010024000001c4028a001d0041
00b800004558b800102f1bb90010000f3e59b800004558b8001d2f1bb9001d00053e59b9001b
0001f4b80018d0b80001d0b800012fb8001010b900090001f4303133353e0335342623220607
273e0133321615140e02073e013b01152848704c283c3d28441c2f285a3f596627455f391a38
19b931487463532737462d202f2c3567552d5b61693b0204470000000002002cfff401c5028a
000b001d003500b800004558b800062f1bb90006000f3e59b800004558b800002f1bb9000000
053e59b9000c0001f4b8000610b900160001f4303117222635343633321615140627323e0235
342e0223220e02151416f9616c6c61606c6c601c2d211212212d1c1c2e2112450caca1a1a8a8
a1a1ac421f41654646643f1e1e3f64468c7f00000001001afff401be028a0033005300b80000
4558b800212f1bb90021000f3e59b800004558b800002f1bb9000000053e59b900090001f4ba
001100210000111239b800112fb900120001f4b8002110b9001a0001f4ba0029001100121
}, Open  ]],

Cell[CellGroupData[{

35323e0235342623220607273e0133321e0215
140607151e0315140e02ec263f3429102a1d4d393a4a15304e3933452b123b3328431d2c2559
392a46331c40341d32261521394c0c0f192012361e2e3f361c2f22123f12202c192f36241d34
232d16293c273a4a1404071b2936212a442f190000010026ff5000dd02dc00,

b00ba0008
000000032b303117273e0135342627371e0115140659333a39393a333e4646b01860db7373db
601865dd8484de000001000c000001c701e6000d004000b800004558b800012f1bb900010009
3e59b800004558b8000b2f1bb9000b000
}, Open  ]],

0002f1bb9000000053e59ba00
06000100001112393031330333131e0117333e0137133303bbaf555c0b170b040b160b5c51ac
01e6feec2448232348240114fe1a00010034fff40226029c0027004d00b800004558b8000a2f
1bb9000a00113e59b800004558b800002f1bb9000000053e59b8000a10b900130002f4b80000
10b9001d0002f4ba0022000a0000111239b800222fb900240001f4303105222e0235343e0233
32,

7072e0123220e0215141e023332363735233533110e01015c416d4e2c2d506f412239
2f250e2e1942323250381f1d375135233f148bd720680c2e577f504f7e582f0e171d0f361a24
2545623d3e6346261512ab45feec212b0001005a000000ad02900003002500b800004558b800
012f1bb9000100113e59b800004558b800002f1bb9000000053e593031331133115a530290fd
700000000002005a000002340290000a0013003500b800004558b800012f1bb9000100113e59
b800004558b800002f1bb9000000053e59b9000c0002f4b8000110b900120002f43031331133
321615140e0223273332363534262b015aa4989e284e724a554b737373734b0290a89d4e7b55
2d448a7d7d840001005a0000022d02900013005b00b800004558b800012f1bb9000100113e59
b800004558b800092f1bb9000900113e59b800004558b800002f1bb9000000053e59b8000045
58b8000c2f1bb9000c00053e59ba0005000c0009111239ba000f000100001112393031331133
1317332e0135113311230327231e0115115a56ed470403074f56ee470404070290fe6488326b
340153fd70019d87326734fea9000002005a000002200290000f0018005c00b800004558b800
012f1bb900010011,

Cell["\<\
The following example, taken from Wolfram Research (2023), makes the \
limitation of BlankSequence clear.\
\>", "Text",
 CellChangeTimes->{{3.899101766644408*^9, 3.8991017884927063`*^9}, {
  3.899103834607627*^9, 
  3.899103838556383*^9}},ExpressionUUID->"176ffc13-9058-4f9e-b181-\
7d030a4ef2a9"],

04558b8000d2f1bb9000d00093e59b800004558b80005
2f1bb9000500053e59b800004558b800002f1bb9000000073e59ba00020005000d111239ba00
10000d0005111239b8000d10b80013d0b800132fb8000510b900150001f4b8000210b9001800
01f4b8001010b900190001f4b8000d10b9001c0001f430310535370e0123222635343e023332
1617333733110,

Cell[CellGroupData[{

86041d4b2a5c6d233a4c2a2a4021020842
cf223c1e1f391e1d33261646cdad581d27847a3b5f42241d1d2efd4d01062122fe1c171b3144
2a5862000001004f000001b7027e000c004300b800004558b800082f1bb90008000f3e59b800
004558b800002f1bb9000000053e59b900020001f4b8000810b900050001f4b900030001f4b8
000210b8000ad030313335331123353e0137331133154f9274,

a3f844401d635081710fd
c644ffff0023fff40316029c0027004e0000010a0027004f017100000007004e01c900000000
0001000cff8201e8ffb90003000d00bb00010001000000042b3031173521150c01dc7e373700
00000001001f0000018f01e60009004500b800004558b80
}, Open  ]],

e59b8000045
58b800092f1bb9000900053e59b900070001f4b80001d0b800012fb8000410b900020001f4b8
0006d0b800062f3031333501233521150121151f0100e4014cff0001082c0177432cfe894300
0003005a0000022402900013001c0,

5700b800004558b800012f1bb9000100113e59b800
004558b800002f1bb9000000053e59ba002400010000111239b800242fba000b002400151112
39b900140001f4b8000110b9001c0002f4b8000010b9001d0002f43031331133321e02151406
07151e0115140e0223033332363534262b01113332363534262b015ac332533b21312f3c4a24
425c377e61,

Cell[CellGroupData[{

63d2b314f0f040b4e443048301801793a3239
30fdf43f423d390000000001003f01af00c102bb0011000d00bb000c0002000600042b303113
273e01350623222635343633321615140656172625030515201e171d223701af2619392b011a
181a1e2f2c3c5700000000020030fff401c9028a0020002e004300b800004558b8000a2f1bb9
000a000f3e59b800004558b800002f1bb9000000053e59bb00190001002900042bb8000a10b9,

0001f4b8000010b900210001f4303105222e0235343e0233321617072e0123220e02073e
0133321615140e0227323e02353426232206071e01010c2f503b2228445730344b1b2e14371e
213c2e1c011e502753631e34442718281e113a3c1f481e08470c264d734d60875527271d3317
1b1c40674c252b62632e4b361e41142533203f48272d5e6100030020fff40252029c002d003b
0049008c00b800004558b800122f1bb9001200113e59b800004558b800002f1
}, Open  ]],

00004558b800282f1bb9002800053e59ba001d002b00032bba004200000012111239b800
422fb80031dcba000a00420031111239ba001a00420031111239ba0024002b001d111239b800
1210b900390001f4b8000010b9003c0001f4ba003f002b001d111239303117222e0235343e02
372e0135343e0233321615140e02071e01173e0137330e01071e0117072e01270e0103141617
3e03353426232206133236372e01270e0115141e02e82d49351d15242f191417162838223d44
1a2a351b20572f1e2f0f4d,

7223e1b16234c28265d65110e16291f121d21252c34223e1d
305923232f14232f0c1b30432821362e2711294d2421382a18483a20362f2914335e27296039
417634172008440a251c2229020e1b3a1e0f1f2125161d2b36fe0b1c192a63361c3d261b2d20
1100000000020023000001d3028a001b001f009b00b800004558b80,

Cell[CellGroupData[{

558b8000d2f1bb9000d000f3e59b800004558b800002f1bb9000000053e59b8000045
58b800172f1bb9001700053e59bb00040001000100042bbb00080001000500042bb8000810b8
000bd0b8000810b8000fd0b8000510b80011d0b8000410b80013d0b8000110b80015d0b80001
10b80019d0b8000410b8001cd0b8000510b8001ed03031333723353337233533373307333733
07331523073315230723372307133337235a19505712555c17351785183518515712555,


18841920841284cc39943ab7b7b7b73a9439cccccc01059400010019fff401c1027e0026004d
00b800004558b800162f1bb90016000f3e59b800004558b800002f1bb9000000053e59b90009
0001f4ba001100160000111239b800112fb8001610b900180001f4b8001110b9001d0001f430
3117222e0227371e0133323e02353426232206072713211523073e0133321e0215140e02ea26
3f3329
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

43c4d0c0f181f11
361d2c15263621424a14131c013347bd0c0e18314b343450371dffff002fff5600c601db0227
0026000001690006001d00000001001ffff4018902900010002b00b800004558b8000a2f1bb9
000a00113e59b800004558b800002f1bb9000000053e59b900060002,

1172227371e0133
323635113311140e02d47b3a3c163823353454152b450c692a2723414b01c7fe312a4b382000
00000001000aff60015102c60003001800b800004558b800012f1bb9000100133e59b80000dc
3031170133010a010b3cfef5a00366fc9a00000000020028fff401c0028a000d002e004300b8
00004558b800252f1bb90025000f3e59b800004558b8000e2f1bb9000e00053e59bb00000001
001d00042bb8002510b900060001f4b8000e10b900150001f43031133236372e0123220e0215
141613222627371e0133323e02370e0123222635343e0233321e0215140e02eb20471f08483d
17291e113a1e334d1a2e14371e223c2e1c011e502853621e3345262f513b212844570136282d
5e601425341f3f48febe261d34171c1c41684d262c62632e4b361e264d734d60875527000000
0001002c000001c7027e000e003700b800004558b800072f1bb90007000f3e59b800004558b8
00002f1bb9000000053e59b8000710b900050001f4b80009d0b800092f3031333e0337213521
150e0307b104182b432ffec2019b39472a13045a96877e424733488489995d00000200110000
01d5027e000a0014005900b800004558b800052f1bb90005000f3e59b800004558b800002f1b
b9000000053e59bb00010001000c00042bb8000c10b8000bd0b80003d0b800032fb8000c10b8
0006d0b8000110b80009d0ba0010000500001112393031213521350133113315231525333534
3637230e01070130fee101115c5757feeac80302040c1a0eb0360198fe7442b0f2b91a471a17
2c1700010057fff4022e02900019003300b800004558b800062f1bb9000600113e59b8000045
58b800002f1bb9000000053e59,

Cell["\<\
With this, the following core functional programming \
\[OpenCurlyDoubleQuote]primitives\[CloseCurlyDoubleQuote] are summed up in a \
helpful reference table in (Mangano, 2010, p. 26) and will lead to a \
discussion of the relative idioms and their application.\
\>", "Text",
 CellChangeTimes->{{3.8993012301562567`*^9, 3.8993013282098455`*^9}, {
  3.899311013538628*^9, 
  3.8993110156188016`*^9}},ExpressionUUID->"7ab05f99-2afa-4253-aa30-\
07e7f29483c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Function\>\"", ",", "\"\<Operator\>\"", ",", 
       "\"\<Description\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Map[f, expr]\>\"", ",", "\"\</@\>\"", ",", 
       "\"\<Return the list that results from executing f on each element of \
an expr\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Apply[f, expr]\>\"", ",", " ", "\"\<@@\>\"", ",", " ", 
       "\"\<Return the result of replacing the head of a list with function f\
\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Apply[f, expr, {1}]\>\"", ",", " ", "\"\<@@@\>\"", ",", " ", 
       "\"\<Applies f at level 1 inside list. In other words, replace the \
head of all elements\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Fold[f, x, {a1, a2, a3}]\>\"", ",", " ", "\"\<N/A\>\"", ",", " ", 
       "\"\<If list hast length 0, return x, otherwise return f[f[f[x, a1], \
a2], a3]...\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<FoldList[f, x, {a1, a2, a3, ...}]\>\"", ",", " ", "\"\<N/A\>\"", 
       ",", " ", 
       "\"\<Return the list {x, f[x, a1], f[f[x, a1], a2], ...}\>\""}], "}"}],
      ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Nest[f, expr, n]\>\"", ",", " ", "\"\<N/A\>\"", ",", " ", 
       "\"\<Return the list f[f[f[...f[expr]...]]] (i.e. f applied n times)\>\
\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<NestList[f, expr, n]\>\"", ",", " ", "\"\<N/A\>\"", ",", " ", 
       "\"\<Return the list {x, f[expr], f[f[expr]], ...} where f repeats up \
to n times\>\""}], "}"}]}], "}"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899301677602352*^9, 3.899301866006359*^9}, {
  3.8993020656046867`*^9, 3.899302234239422*^9}, {3.89930227779589*^9, 
  3.89930236804745*^9}, {3.8993024854544277`*^9, 3.899302574967272*^9}, {
  3.899302616315116*^9, 3.8993026412235155`*^9}, {3.899303220530356*^9, 
  3.899303290511826*^9}, {3.899397002937572*^9, 3.8993970031743627`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"221e1245-2c73-4725-9dcf-4117e7292968"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Function\"\>", "\<\"Operator\"\>", "\<\"Description\"\>"},
    {"\<\"Map[f, expr]\"\>", "\<\"/@\"\>", "\<\"Return the list that results \
from executing f on each element of an expr\"\>"},
    {"\<\"Apply[f, expr]\"\>", "\<\"@@\"\>", "\<\"Return the result of \
replacing the head of a list with function f\"\>"},
    {"\<\"Apply[f, expr, {1}]\"\>", "\<\"@@@\"\>", "\<\"Applies f at level 1 \
inside list. In other words, replace the head of all elements\"\>"},
    {"\<\"Fold[f, x, {a1, a2, a3}]\"\>", "\<\"N/A\"\>", "\<\"If list hast \
length 0, return x, otherwise return f[f[f[x, a1], a2], a3]...\"\>"},
    {"\<\"FoldList[f, x, {a1, a2, a3, ...}]\"\>", "\<\"N/A\"\>", "\<\"Return \
the list {x, f[x, a1], f[f[x, a1], a2], ...}\"\>"},
    {"\<\"Nest[f, expr, n]\"\>", "\<\"N/A\"\>", "\<\"Return the list \
f[f[f[...f[expr]...]]] (i.e. f applied n times)\"\>"},
    {"\<\"NestList[f, expr, n]\"\>", "\<\"N/A\"\>", "\<\"Return the list {x, \
f[expr], f[f[expr]], ...} where f repeats up to n times\"\>"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.899301626699167*^9, 3.899301679447692*^9, {3.899301783949149*^9, 
   3.899301792204997*^9}, {3.8993018561449227`*^9, 3.8993018664941998`*^9}, 
   3.8993020496305127`*^9, 3.8993021461417775`*^9, 3.899302234686453*^9, 
   3.899302368551417*^9, 3.8993026300313344`*^9, 3.899303290971123*^9, 
   3.899398443802389*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"5c6ed035-9a0b-46bd-b904-cb18d3debad8"]
}, {2}]],

ing 59 /semicolon put
Encoding 65 /A put
Encoding 66 /B put
Encoding 67 /C put
Encoding 68 /D put
Encoding 69 /E put
Encoding 70 /F put
Encoding 71 /G put
Encoding 73 /I put
Encoding 76 /L put
Encoding 77 /M put
Encoding 78 /N put
Encoding 79 /O put
Encoding 80 /P put
Encoding 82 /R put
Encoding 83 /S put
Encoding 84 /T put
Encoding 86 /V put
Encoding 87 /W put
Encoding 97 /a put
Encoding 98 /b put
Encoding 99 /c put
Encoding 100 /d put
Encoding 101 /e put
Encoding 102 /f put
Encoding 103 /g put
Encoding 104 /h put
Encoding 105 /i put
Encoding 106 /j put
Encoding 107 /k put
Encoding 108 /l put
Encoding 109 /m put
Encoding 110 /n put
Encoding 111 /o put
Encoding 112 /p put
Encoding 114 /r put
Encoding 115 /s put
Encoding 116 /t put
Encoding 117 /u put
Encoding 118 /v put
Encoding 119 /w put
Encoding 120 /x put
Encoding 1,

 put
Encoding 122 /z put
/CharStrings 56 dict dup begin
/.notdef 0 def
/p 1 def
/r 2 def
/o 3 def
/f 4 def
/I 5 def
/D 6 def
/G 7 def
/i 8 def
/d 9 def
/comma 10 def
/colon 11 def
/semicolon 12 def
/s 13 def
/u 14 def
/b 15 def
/P 16 def
/O 17 def
/e 18 def
/n 19 def
/V 20 def
/w 21 def
/A 22 def
/g 23 def
/m 2,


/t 25 def
/C 26 def
/l 27 def
/L 28 def
/a 29 def
/T 30 def
/E 31 def
/S 32 def
/y 33 def
/c 34 def
/v 35 def
/W 36 def
/h 37 def
/one 38 def
/six 39 def
/F 40 def
/quotedbl 41 def
/N 42 def
/R 43 def
/B 44 def
/k 45 def
/zero 46 def
/nine 47 def
/four 48 def
/two 49 def
/three 50 def
/j 51 def
/M 52 def,

Cell[CellGroupData[{

nd 55 def
end readonly def
/sfnts [
<0001000000090080000300106376742039420d2900002e84000005466670676d20a426c00000
33cc00000910676c79669030990f0000009c00002de868656164f363211a00003cdc00000036
68686561091d00e100003d1400000024686d7478f650177f00003d38000000e06c6f63610004
f33800003e18000000e46d617,

9604b600003efc00000020707265701e845bfc00003f1c
000010c70004004e00000419051b0003000700200034005cbc002101bf002b000d015ab41010
081a07be0157000200140169000800000158401804021ab11b060e303026109b0d0d04069c03
4126049c0143003ffdce3fed113910ed12392fce10deed012fddeddeed10fdc611392fedd4ed
3130011121110111211101140e022307230333323635342e0223233533321e0203140e022322
2e0235343e0233321e020419fc350339fd56025a27496941068a0c7b49421d3f6143393772a5
6932f8111e271616281e11111e281616271e1
}, Open  ]],

411fbef02bd375c432685
0102422e1f38291897315068fda416261d10101d261616271c11111c270000000002008bfe73
041d040e001600270067b10102435558b20d0820bb020b000a00000217b5170a0d0b281cb801
31400b12500b4f0a5523fc4,

Cell[CellGroupData[{

39012fd4ed10fdc43331301b
b30d0b281cb80131400b12500b4f0a5523fc40055200183f1a4ded3f3f3fed11123931305901
140e022322262711231133173e0333321e0205342e022322060711161633323e02041d4f8dc0
71264c1ff4d3061f434e5a385a8c5f32ff00182d412a3e713f1d552c3a5f4324020e8ccc8741
0a08fe7305859627402d184885bd8054764c236456fe440b0e30587f000100b400000411040e
0017006fb10102435558b10d09bb0211000a0017020cb2000a08b8013eb20dca05,

7400a
40125017170a0b4f0a5100183f3f12392f3f1a4ded7cfd18ed012fd4ed10ed3231301bb90008
013eb20dca05b80107400a40125017170a0b4f0a5100183f3f12392f3f1a4ded7cfd18ed3130
5901362e022322060711231133173e0333321e02070319020f21301f367345fadd09193f4d5e
384d77512703026d395034185966fd7d03f894273e2d1835689d6700000000020048ffe9041e
040e00130023004db10102435558bf000002150014001c0215000a00170132b20f501fb80132
b240055200183f1a4ded3fed012fedd4ed31301bb900170132b20f501fb80132b24005520018
3f1
}, Open  ]],

40e0223222e0235343e0233321e0207342623220e0215141633323e
02041e4480ba7771b27c424581ba7572b27c41fe7774405a3a1b806f3d5a381c020478c78e4e
4283c58379c68c4d4384c3869e9f325774429fa131577600000200000000041b0598001b001c
0079b10102435558b210090db8020d40120f0a00120f0f1d1e1209fa0f130c0c180e1bb80101
b70003fd4018540e5100183f3f1a4dfdd6ed1112392f3933e,

Cell[CellGroupData[{

1301b400a1209fa0f130c0c180e1bb80101b70003fd4018540e5100183f3f1a4dfdd6ed1112
392f3933ed3231305901262623220e02151521152111231121352135343e023332161701041b
2c793f2b4a361f018ffe71f6fed901273f73a264427733fbe504b60e1317324d37a4befd5802
a8be9a6c9b632e110cfe7d0000010096000003d0051b000b0053b10102435558b503060a0109
05b801f9400f0a0a0c0d050ae00843040bde40014100183f1a4ded323fed32111201392ffdd4
c410d4c431301b400b050ae00843040bde40014100183f1a4ded323fed323130591335211521
1121152135211196033afee00120fcc601200452c9c9fc79cbcb038700000002005600000431
051b000c001700,

102435558bc00000205000d001401f5400a0613e3074114e340064300
183f1a4ded3fed012fedd4ed31301b400913e3074114e340064300183f1a4ded3fed31305901
140e0223211121321e0205342e0223231133323604314b9ff8adfeb4018396e1964bfef82251
88657d6cb5bc029e98f8af5f051b4b9cf0b66aa6733cfc81d8000001002fffe9040a05310027
0083b10102435558b11402b801d2b52701011c271cbb0204000b00130123400914141701e027
270617b80115b2104221b80115b240064400183f1a4ded3fed12392fed11392fed012fedc411
392f10fdc631301bb900130123400914141701e027270617b8
}, Open  ]],

Cell[TextData[{
 "I refer to the Functional Operators Tutorial (Wolfram Research, 2023) for \
the minor details including, for example, the modifications of the hash \
operator, such as ",
 StyleBox["#n",
  FontSlant->"Italic"],
 " or ",
 StyleBox["##",
  FontSlant->"Italic"],
 ". (Mangano, 2010) offer the helpful notion of idioms in this conext, where \
the functions ",
 StyleBox["Map[] ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["Apply[] ",
  FontSlant->"Italic"],
 "that we have already seen present one such idiom, useful for summing \
sublists: here is the relevant example (p. 33), in short-hand."
}], "Text",
 CellChangeTimes->{{3.899311104848673*^9, 3.8993112504663906`*^9}, {
  3.8993967896433344`*^9, 
  3.899396897727165*^9}},ExpressionUUID->"735a44c4-fa59-43f9-bc40-\
03c32a8cf80a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Plus", " ", "@@", " ", "#"}], " ", "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "10", ",", "11", ",", "12"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.899396918856059*^9, 3.8993969610748053`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"a31187b4-b43d-4238-9192-3c97ea13b5cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "30", ",", "42"}], "}"}]], "Output",
 CellChangeTimes->{3.899396961822362*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"a90192d5-fbcd-4def-a424-9c7ff860d92c"]
}, Open  ]],

Cell["\<\
Plus is applied and mapped to each element, here each sublist, hence this \
would be the Map-Apply idiom. The same can be accomplished in other ways.\
\>", "Text",
 CellChangeTimes->{{3.8993110284004803`*^9, 3.8993110734032226`*^9}, {
  3.8993112553258467`*^9, 3.8993112712611313`*^9}, {3.899396887283857*^9, 
  3.8993969143038*^9}, {3.899396973631146*^9, 3.8993969782943134`*^9}, {
  3.899397025374314*^9, 3.8993970905404563`*^9}, {3.899397161722658*^9, 
  3.8993971756488886`*^9}},ExpressionUUID->"5fc6235e-9a51-4198-aa73-\
bb49d2e2ad2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", " ", "@@@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "10", ",", "11", ",", "12"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.8993971825906773`*^9, 3.899397192931265*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"05ce0f90-8966-44d7-a1e2-ebe6d731e383"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "30", ",", "42"}], "}"}]], "Output",
 CellChangeTimes->{3.899397193531515*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"11c5f936-b0a8-40e9-ae8a-3b55c6ae5f18"]
}, Open  ]],

Cell["\<\
(Mangano, 2010) goes on to present further use cases and appropriate idioms \
in the functional programming chapter of his book. The functional programming \
elements discussed so far allow us to analyze this part of the code, the \
third of the three functions, we are investigating: \
\>", "Text",
 CellChangeTimes->{{3.8993972710654907`*^9, 3.899397284998046*^9}, {
  3.899397349218341*^9, 3.8993973945210094`*^9}, {3.899397431934866*^9, 
  3.8993974581286764`*^9}, {3.899398750249771*^9, 
  3.899398758073885*^9}},ExpressionUUID->"28700660-b16b-4198-b814-\
30d96ed1cc01"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getLeanTree", "[", "proof_", "]"}], ":=", 
  RowBox[{"Tree", "[", 
   RowBox[{
    RowBox[{"proofID", "[", "proof", "]"}], ",", 
    RowBox[{"getLeanTree", "/@", 
     RowBox[{"subproofs", "[", "proof", "]"}]}], ",", 
    RowBox[{"TreeElementLabelStyle", "->", 
     RowBox[{"All", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"White", ",", "16", ",", 
        RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}]}], "]"}]}]}], 
    ",", 
    RowBox[{"TreeElementStyle", "->", 
     RowBox[{"All", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
        RowBox[{"RGBColor", "[", "\"\<#B6094A\>\"", "]"}]}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"400dbb4a-6709-4df1-9c2b-a51196d52508"],

Cell["\<\
There are a lot of options here, concerned with output style. (Something like \
the following gets generated as the final return value: the presentation is \
controlled by the options.)\
\>", "Text",
 CellChangeTimes->{{3.8993974672402253`*^9, 3.8993975145907097`*^9}, {
  3.8993975510888376`*^9, 
  3.899397562973218*^9}},ExpressionUUID->"871fbf8d-1cce-404b-9844-\
acc948f066f0"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree[24, {
       Tree[0, {}, {TreeElementLabelStyle -> (All -> Directive[
            GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
         TreeElementStyle -> (All -> Directive[
            EdgeForm[
             GrayLevel[0]], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]])}], 
       Tree[23, {
         Tree[1, {}, {TreeElementLabelStyle -> (All -> Directive[
              GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
           TreeElementStyle -> (All -> Directive[
              EdgeForm[
               GrayLevel[0]], 
              RGBColor[
              0.7137254901960784, 0.03529411764705882, 
               0.2901960784313726]])}], 
         Tree[22, {
           Tree[2, {}, {TreeElementLabelStyle -> (All -> Directive[
                GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
             TreeElementStyle -> (All -> Directive[
                EdgeForm[
                 GrayLevel[0]], 
                RGBColor[
                0.7137254901960784, 0.03529411764705882, 
                 0.2901960784313726]])}], 
           Tree[21, {
             Tree[3, {}, {TreeElementLabelStyle -> (All -> Directive[
                  GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
               TreeElementStyle -> (All -> Directive[
                  EdgeForm[
                   GrayLevel[0]], 
                  RGBColor[
                  0.7137254901960784, 0.03529411764705882, 
                   0.2901960784313726]])}], 
             Tree[20, {
               Tree[4, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                 TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}], 
               Tree[19, {
                 Tree[8, {
                   Tree[5, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}], 
                   Tree[7, {
                    Tree[6, {
                    Tree[3, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
                    TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}], 
                    Tree[5, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
                    TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
                  TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                   TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}], 
                 Tree[18, {
                   Tree[17, {
                    Tree[10, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}], 
                    Tree[16, {
                    Tree[11, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}], 
                    Tree[15, {
                    Tree[13, {
                    Tree[12, {
                    Tree[3, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
                    TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}], 
                    Tree[11, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
                    TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}], 
                    Tree[14, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}], 
                    Tree[10, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
                    TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
                    TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
                    TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                    TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
                  TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                   TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}], 
                 Tree[4, {}, {TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                   TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
                TreeElementLabelStyle -> (All -> Directive[
                    GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
                 TreeElementStyle -> (All -> Directive[
                    EdgeForm[
                    GrayLevel[0]], 
                    RGBColor[
                    0.7137254901960784, 0.03529411764705882, 
                    0.2901960784313726]])}]}, {
              TreeElementLabelStyle -> (All -> Directive[
                  GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
               TreeElementStyle -> (All -> Directive[
                  EdgeForm[
                   GrayLevel[0]], 
                  RGBColor[
                  0.7137254901960784, 0.03529411764705882, 
                   0.2901960784313726]])}]}, {
            TreeElementLabelStyle -> (All -> Directive[
                GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
             TreeElementStyle -> (All -> Directive[
                EdgeForm[
                 GrayLevel[0]], 
                RGBColor[
                0.7137254901960784, 0.03529411764705882, 
                 0.2901960784313726]])}]}, {
          TreeElementLabelStyle -> (All -> Directive[
              GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
           TreeElementStyle -> (All -> Directive[
              EdgeForm[
               GrayLevel[0]], 
              RGBColor[
              0.7137254901960784, 0.03529411764705882, 
               0.2901960784313726]])}]}, {
        TreeElementLabelStyle -> (All -> Directive[
            GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
         TreeElementStyle -> (All -> Directive[
            EdgeForm[
             GrayLevel[0]], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 
             0.2901960784313726]])}]}, {
      TreeLayout -> Left, TreeElementLabelStyle -> (All -> Directive[
          GrayLevel[1], 16, FontFamily -> "Times New Roman"]), 
       TreeElementStyle -> (All -> Directive[
          EdgeForm[
           GrayLevel[0]], 
          RGBColor[
          0.7137254901960784, 0.03529411764705882, 0.2901960784313726]])}]]}, 
    NamespaceBox[{
      {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.016485343161691632`], 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0., 0.43425472992335057`}, {0.8242304188204477, 0.}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0., 0.43425472992335057`}, {0.8242304188204486, 
         0.8685094598466998}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.8242304188204486, 0.8685094598466998}, {
         1.6484608376408962`, 0.43425472992334935`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{0.8242304188204486, 0.8685094598466998}, {
         1.6484608376408967`, 1.302764189770049}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.6484608376408967`, 1.302764189770049}, {
         2.4726912564613444`, 0.8685094598466985}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{1.6484608376408967`, 1.302764189770049}, {2.472691256461345,
          1.7370189196933983`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.472691256461345, 1.7370189196933983`}, {
         3.2969216752817925`, 1.302764189770048}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{2.472691256461345, 1.7370189196933983`}, {
         3.2969216752817934`, 2.1712736496167477`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.2969216752817934`, 2.1712736496167477`}, {
         4.121152094102241, 1.7370189196933972`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{3.2969216752817934`, 2.1712736496167477`}, {
         4.121152094102241, 2.6055283795400968`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.121152094102241, 2.6055283795400968`}, {4.945382512922689,
          1.0856368248083714`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.121152094102241, 2.6055283795400968`}, {4.94538251292269, 
         3.256910474425121}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.121152094102241, 2.6055283795400968`}, {
         4.9453825129226905`, 4.125419934271821}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.945382512922689, 1.0856368248083714`}, {5.769612931743136,
          0.6513820948850211}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.945382512922689, 1.0856368248083714`}, {5.769612931743136,
          1.5198915547317209`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{5.769612931743136, 1.5198915547317209`}, {6.593843350563584,
          1.0856368248083703`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{5.769612931743136, 1.5198915547317209`}, {6.593843350563585,
          1.9541462846550701`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.593843350563584, 1.0856368248083703`}, {7.418073769384032,
          1.0856368248083699`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{4.94538251292269, 3.256910474425121}, {5.769612931743138, 
         3.2569104744251205`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{5.769612931743138, 3.2569104744251205`}, {6.593843350563585,
          2.82265574450177}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{5.769612931743138, 3.2569104744251205`}, {6.593843350563587,
          3.6911652043484695`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.593843350563587, 3.6911652043484695`}, {7.418073769384034,
          3.256910474425119}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{6.593843350563587, 3.6911652043484695`}, {7.418073769384034,
          4.125419934271819}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.418073769384034, 4.125419934271819}, {8.242304188204482, 
         3.2569104744251187`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.418073769384034, 4.125419934271819}, {8.242304188204482, 
         4.125419934271819}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{7.418073769384034, 4.125419934271819}, {8.242304188204482, 
         4.993929394118518}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{8.242304188204482, 3.2569104744251187`}, {9.066534607024929,
          2.822655744501768}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{8.242304188204482, 3.2569104744251187`}, {9.06653460702493, 
         3.6911652043484677`}}]}, 
       {RGBColor[0.6, 0.5882352941176471, 0.5529411764705883], 
        AbsoluteThickness[1], 
        LineBox[{{9.066534607024929, 2.822655744501768}, {9.890765025845377, 
         2.822655744501767}}]}}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["24",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0., 0.43425472992335057}],
        "DynamicName",
        BoxID -> "VertexID$1"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["0",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.8242304188204477, 0.}],
        "DynamicName",
        BoxID -> "VertexID$2"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["23",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {0.8242304188204486, 0.8685094598466998}],
        "DynamicName",
        BoxID -> "VertexID$3"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["1",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.6484608376408962, 0.43425472992334935}],
        "DynamicName",
        BoxID -> "VertexID$4"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["22",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1.6484608376408967, 1.302764189770049}],
        "DynamicName",
        BoxID -> "VertexID$5"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["2",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.4726912564613444, 0.8685094598466985}],
        "DynamicName",
        BoxID -> "VertexID$6"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["21",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {2.472691256461345, 1.7370189196933983}],
        "DynamicName",
        BoxID -> "VertexID$7"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.2969216752817925, 1.302764189770048}],
        "DynamicName",
        BoxID -> "VertexID$8"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["20",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {3.2969216752817934, 2.1712736496167477}],
        "DynamicName",
        BoxID -> "VertexID$9"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.121152094102241, 1.7370189196933972}],
        "DynamicName",
        BoxID -> "VertexID$10"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["19",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.121152094102241, 2.6055283795400968}],
        "DynamicName",
        BoxID -> "VertexID$11"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["8",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.945382512922689, 1.0856368248083714}],
        "DynamicName",
        BoxID -> "VertexID$12"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {5.769612931743136, 0.6513820948850211}],
        "DynamicName",
        BoxID -> "VertexID$13"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["7",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {5.769612931743136, 1.5198915547317209}],
        "DynamicName",
        BoxID -> "VertexID$14"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["6",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {6.593843350563584, 1.0856368248083703}],
        "DynamicName",
        BoxID -> "VertexID$15"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {7.418073769384032, 1.0856368248083699}],
        "DynamicName",
        BoxID -> "VertexID$16"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["5",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {6.593843350563585, 1.9541462846550701}],
        "DynamicName",
        BoxID -> "VertexID$17"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["18",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.94538251292269, 3.256910474425121}],
        "DynamicName",
        BoxID -> "VertexID$18"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["17",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {5.769612931743138, 3.2569104744251205}],
        "DynamicName",
        BoxID -> "VertexID$19"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["10",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {6.593843350563585, 2.82265574450177}],
        "DynamicName",
        BoxID -> "VertexID$20"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["16",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {6.593843350563587, 3.6911652043484695}],
        "DynamicName",
        BoxID -> "VertexID$21"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["11",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {7.418073769384034, 3.256910474425119}],
        "DynamicName",
        BoxID -> "VertexID$22"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["15",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {7.418073769384034, 4.125419934271819}],
        "DynamicName",
        BoxID -> "VertexID$23"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["13",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {8.242304188204482, 3.2569104744251187}],
        "DynamicName",
        BoxID -> "VertexID$24"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["12",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {9.066534607024929, 2.822655744501768}],
        "DynamicName",
        BoxID -> "VertexID$25"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["3",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {9.890765025845377, 2.822655744501767}],
        "DynamicName",
        BoxID -> "VertexID$26"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["11",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {9.06653460702493, 3.6911652043484677}],
        "DynamicName",
        BoxID -> "VertexID$27"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["14",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {8.242304188204482, 4.125419934271819}],
        "DynamicName",
        BoxID -> "VertexID$28"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["10",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {8.242304188204482, 4.993929394118518}],
        "DynamicName",
        BoxID -> "VertexID$29"], 
       TagBox[InsetBox[
         FrameBox[
          StyleBox["4",
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Times New Roman",
           FontSize->16,
           FontColor->GrayLevel[1]],
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941], 
            RGBColor[
            0.7137254901960784, 0.03529411764705882, 0.2901960784313726]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1], 
            GrayLevel[0]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {4.9453825129226905, 4.125419934271821}],
        "DynamicName",
        BoxID -> "VertexID$30"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.898114250683877*^9, 3.898114358443712*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"edd9f82e-25eb-4814-81d9-0aad4a5fd903"],

Cell["\<\
There is also a recursive element here, which we will ignore just for the \
moment, in fact we want to focus in on just this part: \
\>", "Text",
 CellChangeTimes->{{3.899397580787592*^9, 3.899397694396125*^9}, {
  3.899398035179335*^9, 3.89939804254644*^9}, {3.899398090484661*^9, 
  3.8993981065662622`*^9}, {3.8993981444577293`*^9, 
  3.8993982294300385`*^9}},ExpressionUUID->"5242f9b9-7668-4f2d-bc5d-\
5f96173cb021"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getLeanTree", "/@", 
  RowBox[{"subproofs", "[", "proof", "]"}]}]], "Input",
 CellLabel->
  "In[106]:=",ExpressionUUID->"29cb0364-ec8c-475f-a663-bbcd62882503"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.899398220847727*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"99c0a661-6363-43c9-b764-2f4f8a13a2ae"]
}, Closed]],

Cell["\<\
The \"/@\" - Mapping of the (recursively called) function getLeanTree[] is \
the Map - Apply idiom in action, where the function is applied to the output \
of another function subproofs[], which is a list, with usually two or three \
elements, behind the scenes .\
\>", "Text",
 CellChangeTimes->{{3.899398231683572*^9, 
  3.899398272571416*^9}},ExpressionUUID->"cca4a2d2-bf04-47f9-9c4f-\
735a90c58f2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subproofs", "[", "leanProof", "]"}]], "Input",
 CellChangeTimes->{{3.8993979324192696`*^9, 3.899397936434442*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"241d0293-f31b-425d-b38a-4d74e49b49e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"Goal", "\<\"p : \:2115\"\>"},
      {"ID", "0"},
      {"Rule", "Assumption"}
     },
     AutoDelete->False,
     GridBoxBackground->{"Columns" -> {
         RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"Goal", "\<\"\[ForAll] {m n : \:2115}, nat.prime p \[RightArrow] p \
\[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
      {"ID", "23"},
      {"Rule", "\<\"\[ForAll]I\"\>"},
      {"Proofs", 
       TagBox[
        DynamicModuleBox[{Typeset`var$$ = True}, 
         InterpretationBox[
          StyleBox[
           PaneSelectorBox[{False->GridBox[{
              {
               OpenerBox[Dynamic[Typeset`var$$],
                Appearance->Automatic,
                AutoAction->False,
                ContinuousAction->False,
                Enabled->Automatic], "Arguments"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxBackground->{"Columns" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
            True->GridBox[{
              {
               OpenerBox[Dynamic[Typeset`var$$],
                Appearance->Automatic,
                AutoAction->False,
                ContinuousAction->False,
                Enabled->Automatic], "Arguments"},
              {"", 
               PaneBox[
                TagBox[GridBox[{
                   {
                    TagBox[GridBox[{
                    {"Goal", "\<\"m : \:2115\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                   {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {n : \:2115}, nat.prime p \
\[RightArrow] p \[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"n : \:2115\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"nat.rec\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ 0 \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ 0\"\>"},
                    {"ID", "5"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"not.elim\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[Not]p \[Divides] 1\"\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"nat.prime.not_dvd_one\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ 0\"\>"},
                    {"ID", "5"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {Rule, 
                    "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "10"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n.succ\"\>"},
                    {"ID", "11"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "15"},
                    {"Rule", "\<\"or.elim\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m \[Or] p \[Divides] monoid.pow \
m n\"\>"},
                    {"ID", "13"},
                    {"Rule", "\<\"iff.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m * monoid.pow m n \
\[LeftRightArrow] p \[Divides] m \[Or] p \[Divides] monoid.pow m n\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"nat.prime.dvd_mul\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n.succ\"\>"},
                    {"ID", "11"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 
                    12}, {Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m \[RightArrow] p \[Divides] \
m\"\>"},
                    {"ID", "14"},
                    {"Rule", "\<\"id\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "10"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 
                    12}, {Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {Rule, 
                    "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 
                    12}, {Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]},
                {
                 TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[
          TrueQ[Typeset`var$$]],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 18}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "h : p \[Divides] m ^ n"}, {$CellContext`ID, 
       4}, {Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "p \[Divides] m"}, {$CellContext`ID, 19}, {
      Rule, "nat.rec"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 18}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "pp : nat.prime p"}, {$CellContext`ID, 3}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, {$CellContext`ID, 
       20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "p \[Divides] m"}, {$CellContext`ID, 
              19}, {Rule, "nat.rec"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 2}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "nat.prime p \[RightArrow] p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 21}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "pp : nat.prime p"}, {$CellContext`ID, 
              3}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "m : \:2115"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] {n : \:2115}, nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 22}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "nat.prime p \[RightArrow] p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 21}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}], "}"}]], "Output",
 CellChangeTimes->{3.899397936829914*^9, 3.89939800974971*^9, 
  3.899399779926029*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"1c431665-6c15-4e0a-a599-637a9ef4d5e7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

23222e0235343e023332161711331101141e02333236371126
2623220e02030a0620444e59365a8c5f324f8cc071264d1ef4fd6f172d422a3e703f1d552b3b
5e43249627402d194885be758ccd87410a08018dfa7b01,

Cell["\<\
The grid structures presented above immediately bring us to pattern-oriented \
programming in Wolfram Language and we move on to the second function of our \
initial three to investigate this aspect.\
\>", "Text",
 CellChangeTimes->{{3.898929186211726*^9, 3.8989291934364696`*^9}, {
  3.8993967008141766`*^9, 3.8993967012975364`*^9}, {3.89939830554771*^9, 
  3.8993983503554726`*^9}, {3.8993987926364717`*^9, 3.899398828096575*^9}, {
  3.8994003218994102`*^9, 3.8994003228548813`*^9}, {3.899445887460566*^9, 
  3.89944588801789*^9}},ExpressionUUID->"9daf26ab-168c-434d-a4ff-\
9ccf7e23d81c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"subproofs", "[", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"___", ",", 
        RowBox[{"{", 
         RowBox[{"Proofs", ",", 
          RowBox[{"OpenerView", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Arguments", ",", 
              RowBox[{"Column", "[", 
               RowBox[{"subproofs_", ",", "___"}], "]"}]}], "}"}], ",", 
            "___"}], "]"}]}], "}"}], ",", "___"}], "}"}], ",", "___"}], "]"}],
     "]"}], ":=", "subproofs"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subproofs", "[", "proof_", "]"}], ":=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 CellLabel->
  "In[108]:=",ExpressionUUID->"ae6da0be-55a5-4f7c-a436-a19175134f68"],

Cell["\<\
To clear up a technical detail: the opener view is the collapsable arrow or \
triangle shape leading to more text display, here in a nested form when \
viewing in a Mathematica notebook. In a way, the pattern to tree functions \
are all about this un-collapsing of the grid structure, representing a \
mathematical proof in Lean. For completeness, here is another level of the \
grid expanded and viewable in PDF-file-format to illustrate the \
functionality. (This structure will become important again once we look at \
recursion.)\
\>", "Text",
 CellChangeTimes->{{3.899398353640232*^9, 3.8993983545431314`*^9}, {
  3.8993988530337486`*^9, 3.899398994585271*^9}, {3.899399038944524*^9, 
  3.8993990558637867`*^9}, {3.899399800338667*^9, 3.8993998288312287`*^9}, {
  3.899399990338067*^9, 
  3.8994000286607494`*^9}},ExpressionUUID->"f5fea923-4eec-459b-ab45-\
432a0cc6df45"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"Goal", "\<\"p : \:2115\"\>"},
      {"ID", "0"},
      {"Rule", "Assumption"}
     },
     AutoDelete->False,
     GridBoxBackground->{"Columns" -> {
         RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"Goal", "\<\"\[ForAll] {m n : \:2115}, nat.prime p \[RightArrow] p \
\[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
      {"ID", "23"},
      {"Rule", "\<\"\[ForAll]I\"\>"},
      {"Proofs", 
       TagBox[
        DynamicModuleBox[{Typeset`var$$ = True}, 
         InterpretationBox[
          StyleBox[
           PaneSelectorBox[{False->GridBox[{
              {
               OpenerBox[Dynamic[Typeset`var$$],
                Appearance->Automatic,
                AutoAction->False,
                ContinuousAction->False,
                Enabled->Automatic], "Arguments"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxBackground->{"Columns" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
            True->GridBox[{
              {
               OpenerBox[Dynamic[Typeset`var$$],
                Appearance->Automatic,
                AutoAction->False,
                ContinuousAction->False,
                Enabled->Automatic], "Arguments"},
              {"", 
               PaneBox[
                TagBox[GridBox[{
                   {
                    TagBox[GridBox[{
                    {"Goal", "\<\"m : \:2115\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                   {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {n : \:2115}, nat.prime p \
\[RightArrow] p \[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = True}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"n : \:2115\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"nat.rec\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ 0 \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ 0\"\>"},
                    {"ID", "5"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"not.elim\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[Not]p \[Divides] 1\"\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"nat.prime.not_dvd_one\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ 0\"\>"},
                    {"ID", "5"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {Rule, 
                    "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "10"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n.succ\"\>"},
                    {"ID", "11"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "15"},
                    {"Rule", "\<\"or.elim\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m \[Or] p \[Divides] monoid.pow \
m n\"\>"},
                    {"ID", "13"},
                    {"Rule", "\<\"iff.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m * monoid.pow m n \
\[LeftRightArrow] p \[Divides] m \[Or] p \[Divides] monoid.pow m n\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"nat.prime.dvd_mul\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n.succ\"\>"},
                    {"ID", "11"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 
                    12}, {Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m \[RightArrow] p \[Divides] \
m\"\>"},
                    {"ID", "14"},
                    {"Rule", "\<\"id\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "10"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 
                    12}, {Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {Rule, 
                    "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 
                    12}, {Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]},
                {
                 TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[
          TrueQ[Typeset`var$$]],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 18}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "h : p \[Divides] m ^ n"}, {$CellContext`ID, 
       4}, {Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "p \[Divides] m"}, {$CellContext`ID, 19}, {
      Rule, "nat.rec"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 18}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "pp : nat.prime p"}, {$CellContext`ID, 3}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, {$CellContext`ID, 
       20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "p \[Divides] m"}, {$CellContext`ID, 
              19}, {Rule, "nat.rec"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 2}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "nat.prime p \[RightArrow] p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 21}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "pp : nat.prime p"}, {$CellContext`ID, 
              3}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "m : \:2115"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] {n : \:2115}, nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 22}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "nat.prime p \[RightArrow] p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 21}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}], "}"}]], "Output",
 CellChangeTimes->{3.899397936829914*^9, 3.89939800974971*^9, 
  3.899399779926029*^9, 3.8993999726490116`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"d26c0f82-83da-47f1-a090-e960a2336774"],

Cell["\<\
With this out of the way, rules are the essential building block in this \
chapter: \[OpenCurlyDoubleQuote]Everything that the Wolfram Language does can \
be thought of as derived from its ability to apply general transformation \
rules to arbitrary symbolic expressions\[CloseCurlyDoubleQuote] (Wolfram \
Research, 2023). They can be used for string operations like so, where the \
arrow gives the replacement rule.\
\>", "Text",
 CellChangeTimes->{{3.8993989983292537`*^9, 3.8993990123585587`*^9}, {
  3.8994714076765456`*^9, 3.899471467014536*^9}, {3.8994715083343067`*^9, 
  3.899471551930394*^9}, {3.8994716896006536`*^9, 3.8994717067175384`*^9}, {
  3.8994717834751625`*^9, 
  3.899471800042189*^9}},ExpressionUUID->"4b7d98a9-1128-4b75-96a8-\
05cdc6230586"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<Mathematica is multi-paradigm\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Mathematica\>\"", "->", " ", "\"\<Wolfram Language\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8994717115534816`*^9, 3.8994717690579853`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"1ff2605c-45d2-4594-953b-0e852e233a07"],

Cell[BoxData["\<\"Wolfram Language is multi-paradigm\"\>"], "Output",
 CellChangeTimes->{3.8994717692534423`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"2ab02529-5274-4a86-9103-d0445122dad7"]
}, Open  ]],

Cell["\<\
Here is short-hand notation and a useful list item swap rule:\
\>", "Text",
 CellChangeTimes->{{3.8994718467611732`*^9, 
  3.899471862177968*^9}},ExpressionUUID->"49b623ec-92fd-4a18-9439-\
113d5ac58645"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Beta]", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Gamma]", ",", "3"}], "}"}]}], "}"}], " ", "/.", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_"}], "}"}], "->", 
   RowBox[{"{", 
    RowBox[{"y", ",", "x"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8994718728179517`*^9, 3.899472009973815*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"a9a2cf23-f04f-4fc7-bd33-9877b471b06e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "\[Alpha]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "\[Beta]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\[Gamma]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8994720107368555`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"0c2b4879-787c-412b-9592-a3372704e681"]
}, Open  ]],

Cell[TextData[{
 "At this point we also circle back to the blank-notation for patterns: The \
above example is taken from (Wellin, p. 150), and to highlight the concept\
\[CloseCurlyQuote]s importance and its relationship to lists: \
\[OpenCurlyDoubleQuote]Rule-based programming is such a useful construct for \
manipulating lists and arbitrary expressions that no user of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " should be without a working knowledge of this paradigm.\
\[CloseCurlyDoubleQuote] (Ibid.)"
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8994720223672504`*^9, 
  3.899472259244085*^9}},ExpressionUUID->"431390d4-1754-40c2-acf1-\
0f5c4e5c0803"],

Cell["\<\
The following built-in functions help to implement the paradigm as discussed \
so far: Here a generic test using blanks.\
\>", "Text",
 CellChangeTimes->{{3.899472262644293*^9, 3.899472295297493*^9}, {
  3.8994723776165915`*^9, 
  3.899472387571741*^9}},ExpressionUUID->"60afb37b-f6af-4418-a8d6-\
4bac709001a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"\"\<Mathematica\>\"", ",", " ", "_"}], "]"}]], "Input",
 CellChangeTimes->{{3.899472303342549*^9, 3.8994723143706903`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"e1390778-207c-4cb6-ad7d-67f733740abd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.899472314807435*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"ce56864e-0ff4-4a31-874f-7f8cc2b1b520"]
}, Open  ]],

Cell["\<\
And here the pattern matching function already discussed in terms of lists, \
the first of our three functions, implementing a more complex pattern \
matching routine.\
\>", "Text",
 CellChangeTimes->{{3.899472573125552*^9, 3.8994725838241453`*^9}, {
  3.8994726859277916`*^9, 3.899472699000608*^9}, {3.899473175939595*^9, 
  3.899473189576274*^9}, {3.8994742674607964`*^9, 
  3.8994742722015767`*^9}},ExpressionUUID->"c1c176d9-3677-46fc-9058-\
d1bff79bf8c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"proofID", "[", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"___", ",", 
        RowBox[{"{", 
         RowBox[{"ID", ",", "id_"}], "}"}], ",", "___"}], "}"}], ",", "___"}],
      "]"}], "]"}], ":=", "id"}], ";"}]], "Input",
 CellChangeTimes->{{3.898929031886757*^9, 3.898929031887765*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9cb399ce-331a-4d14-80dc-e2b0e35fe18c"],

Cell[TextData[{
 "Combine this pattern with the built-on ",
 StyleBox["Cases[] ",
  FontSlant->"Italic"],
 "to extract the matches and compile them to a list, given appropriate input."
}], "Text",
 CellChangeTimes->{{3.8994727091133385`*^9, 3.8994727399748106`*^9}, {
  3.8994732242395973`*^9, 
  3.8994732448524275`*^9}},ExpressionUUID->"aa8cbfcb-a73d-41c1-a69a-\
10f1de7ea778"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pattern", " ", "=", " ", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"___", ",", 
       RowBox[{"{", 
        RowBox[{"ID", ",", "id_"}], "}"}], ",", "___"}], "}"}], ",", "___"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8994732547146015`*^9, 3.89947326681215*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"79041ada-66a4-4c62-90ac-e947e4ca9238"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"subproofs", "[", "leanProof", "]"}], ",", " ", "pattern"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8994733300658665`*^9, 3.8994733446176205`*^9}, {
  3.8994734074126587`*^9, 3.8994734197611513`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"c6243b71-9603-493f-85d3-00b25855d8d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"Goal", "\<\"p : \:2115\"\>"},
      {"ID", "0"},
      {"Rule", "Assumption"}
     },
     AutoDelete->False,
     GridBoxBackground->{"Columns" -> {
         RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
     GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], ",", 
   TagBox[GridBox[{
      {"Goal", "\<\"\[ForAll] {m n : \:2115}, nat.prime p \[RightArrow] p \
\[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
      {"ID", "23"},
      {"Rule", "\<\"\[ForAll]I\"\>"},
      {"Proofs", 
       TagBox[
        DynamicModuleBox[{Typeset`var$$ = False}, 
         InterpretationBox[
          StyleBox[
           PaneSelectorBox[{False->GridBox[{
              {
               OpenerBox[Dynamic[Typeset`var$$],
                Appearance->Automatic,
                AutoAction->False,
                ContinuousAction->False,
                Enabled->Automatic], "Arguments"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}},
             GridBoxBackground->{"Columns" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], 
            True->GridBox[{
              {
               OpenerBox[Dynamic[Typeset`var$$],
                Appearance->Automatic,
                AutoAction->False,
                ContinuousAction->False,
                Enabled->Automatic], "Arguments"},
              {"", 
               PaneBox[
                TagBox[GridBox[{
                   {
                    TagBox[GridBox[{
                    {"Goal", "\<\"m : \:2115\"\>"},
                    {"ID", "1"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]},
                   {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] {n : \:2115}, nat.prime p \
\[RightArrow] p \[Divides] m ^ n \[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "22"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"n : \:2115\"\>"},
                    {"ID", "2"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "21"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "20"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "19"},
                    {"Rule", "\<\"nat.rec\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ 0 \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "8"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ 0\"\>"},
                    {"ID", "5"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "7"},
                    {"Rule", "\<\"not.elim\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"\[Not]p \[Divides] 1\"\>"},
                    {"ID", "6"},
                    {"Rule", "\<\"nat.prime.not_dvd_one\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ 0\"\>"},
                    {"ID", "5"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {Rule, 
                    "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {Rule, 
                    "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 
                    5}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m\"\>"},
                    {"ID", "18"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"(p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "17"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "10"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "16"},
                    {"Rule", "\<\"\[ForAll]I\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n.succ\"\>"},
                    {"ID", "11"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"p \[Divides] m\"\>"},
                    {"ID", "15"},
                    {"Rule", "\<\"or.elim\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m \[Or] p \[Divides] monoid.pow \
m n\"\>"},
                    {"ID", "13"},
                    {"Rule", "\<\"iff.mp\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m * monoid.pow m n \
\[LeftRightArrow] p \[Divides] m \[Or] p \[Divides] monoid.pow m n\"\>"},
                    {"ID", "12"},
                    {"Rule", "\<\"nat.prime.dvd_mul\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    TagBox[GridBox[{
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"pp : nat.prime p\"\>"},
                    {"ID", "3"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n.succ\"\>"},
                    {"ID", "11"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 
                    12}, {Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"p \[Divides] m \[RightArrow] p \[Divides] \
m\"\>"},
                    {"ID", "14"},
                    {"Rule", "\<\"id\"\>"},
                    {"Proofs", 
                    TagBox[
                    DynamicModuleBox[{Typeset`var$$ = False}, 
                    InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}], True->GridBox[{
                    {
                    OpenerBox[Dynamic[Typeset`var$$],
                    Appearance->Automatic,
                    AutoAction->False,
                    ContinuousAction->False,
                    Enabled->Automatic], "Arguments"},
                    {"", 
                    PaneBox[
                    InterpretationBox[
                    TagBox[GridBox[{
                    {""}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    Column[{}]],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]},
                    {
                    TagBox[GridBox[{
                    {
                    "Goal", "\<\"IH : p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m\"\>"},
                    {"ID", "10"},
                    {"Rule", "Assumption"}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 
                    12}, {Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{
                    Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{
                    0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {Rule, 
                    "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 
                    12}, {Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 
                    11}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{"Columns" -> {{0.2}}, 
                    "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                    },
                    AutoDelete->False,
                    GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                    GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Grid"]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                    "Column"],
                    ImageMargins->0]}
                    },
                    AutoDelete->False,
                    BaselinePosition->{1, 1},
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    GridBoxBackground->{"Columns" -> {{Automatic}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
                    TrueQ[Typeset`var$$]],
                    Alignment->Automatic,
                    BaseStyle->{},
                    BaselinePosition->Baseline,
                    DefaultBaseStyle->"OpenerView",
                    ImageMargins->0,
                    ImageSize->Automatic],
                    Deployed->False,
                    StripOnInput->False],
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
                    DynamicModuleValues:>Automatic],
                    Setting[#, {0}]& ]}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]},
                {
                 TagBox[GridBox[{
                    {"Goal", "\<\"h : p \[Divides] m ^ n\"\>"},
                    {"ID", "4"},
                    {"Rule", "Assumption"}
                   },
                   AutoDelete->False,
                   GridBoxBackground->{"Columns" -> {
                    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
                   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                  "Grid"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Column"],
             ImageMargins->0]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}},
          GridBoxBackground->{"Columns" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, 
         Dynamic[
          TrueQ[Typeset`var$$]],
         Alignment->Automatic,
         BaseStyle->{},
         BaselinePosition->Baseline,
         DefaultBaseStyle->"OpenerView",
         ImageMargins->0,
         ImageSize->Automatic],
        Deployed->False,
        StripOnInput->False],
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 18}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
      DynamicModuleValues:>Automatic],
     Setting[#, {0}]& ]}
  },
  AutoDelete->False,
  GridBoxBackground->{"Columns" -> {
      RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
  GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
  GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
 "Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "h : p \[Divides] m ^ n"}, {$CellContext`ID, 
       4}, {Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, "p \[Divides] m"}, {$CellContext`ID, 19}, {
      Rule, "nat.rec"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 18}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "pp : nat.prime p"}, {$CellContext`ID, 3}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, {$CellContext`ID, 
       20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, 
              "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, "p \[Divides] m"}, {$CellContext`ID, 
              19}, {Rule, "nat.rec"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 2}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "nat.prime p \[RightArrow] p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 21}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "pp : nat.prime p"}, {$CellContext`ID, 
              3}, {Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>Automatic],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}
},
DefaultBaseStyle->"Column",
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Column"],
ImageMargins->0]}
},
AutoDelete->False,
BaselinePosition->{1, 1},
GridBoxAlignment->{"Columns" -> {{Left}}},
GridBoxBackground->{"Columns" -> {{Automatic}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
GridBoxSpacings->{"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}]}, Dynamic[
 TrueQ[Typeset`var$$]],
Alignment->Automatic,
BaseStyle->{},
BaselinePosition->Baseline,
DefaultBaseStyle->"OpenerView",
ImageMargins->0,
ImageSize->Automatic],
Deployed->False,
StripOnInput->False],
OpenerView[{$CellContext`Arguments, 
  Column[{
    Grid[{{$CellContext`Goal, "m : \:2115"}, {$CellContext`ID, 1}, {
      Rule, $CellContext`Assumption}}, Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
    Grid[{{$CellContext`Goal, 
       "\[ForAll] {n : \:2115}, nat.prime p \[RightArrow] p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 22}, {
      Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
       OpenerView[{$CellContext`Arguments, 
         Column[{
           
           Grid[{{$CellContext`Goal, "n : \:2115"}, {$CellContext`ID, 2}, {
             Rule, $CellContext`Assumption}}, Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
           
           Grid[{{$CellContext`Goal, 
              "nat.prime p \[RightArrow] p \[Divides] m ^ n \[RightArrow] p \
\[Divides] m"}, {$CellContext`ID, 21}, {
             Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
              OpenerView[{$CellContext`Arguments, 
                Column[{
                  
                  Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                  
                  Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 20}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 19}, {
                    Rule, "nat.rec"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ 0 \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 8}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 7}, {
                    Rule, "not.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "\[Not]p \[Divides] 1"}, {$CellContext`ID, 6}, {
                    Rule, "nat.prime.not_dvd_one"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 3}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ 0"}, {$CellContext`ID, 5}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "\[ForAll] (n : \:2115), (p \[Divides] m ^ n \
\[RightArrow] p \[Divides] m) \[RightArrow] p \[Divides] m ^ n.succ \
\[RightArrow] p \[Divides] m"}, {$CellContext`ID, 18}, {
                    Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    
                    "(p \[Divides] m ^ n \[RightArrow] p \[Divides] m) \
\[RightArrow] p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 17}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m ^ n.succ \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 16}, {Rule, "\[ForAll]I"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m"}, {$CellContext`ID, 15}, {
                    Rule, "or.elim"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[Or] p \[Divides] monoid.pow m n"}, \
{$CellContext`ID, 13}, {Rule, "iff.mp"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m * monoid.pow m n \[LeftRightArrow] p \
\[Divides] m \[Or] p \[Divides] monoid.pow m n"}, {$CellContext`ID, 12}, {
                    Rule, "nat.prime.dvd_mul"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{
                    
                    Grid[{{$CellContext`Goal, 
                    "pp : nat.prime p"}, {$CellContext`ID, 
                    3}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n.succ"}, {$CellContext`ID, 11}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "p \[Divides] m \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 14}, {Rule, "id"}, {$CellContext`Proofs, 
                    OpenerView[{$CellContext`Arguments, 
                    Column[{}]}]}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "IH : p \[Divides] m ^ n \[RightArrow] p \[Divides] m"}, \
{$CellContext`ID, 10}, {Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All], 
                    
                    Grid[{{$CellContext`Goal, 
                    "h : p \[Divides] m ^ n"}, {$CellContext`ID, 4}, {
                    Rule, $CellContext`Assumption}}, Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                    Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
                   Background -> {{
                    RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
            Background -> {{
               RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}]}}, 
     Background -> {{
        RGBColor[0.87, 0.94, 1]}, None}, Frame -> All]}]}, False]],
DynamicModuleValues:>{}],
Setting[#, {0}]& ]}
},
AutoDelete->False,
GridBoxBackground->{"Columns" -> {
    RGBColor[0.87, 0.94, 1]}, "Rows" -> {{None}}},
GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
"Grid"]}], "}"}]], "Output",
 CellChangeTimes->{{3.899473339126915*^9, 3.8994733453551865`*^9}, {
  3.8994734087748146`*^9, 3.8994734204942136`*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"d0efb431-8e5a-4755-871b-c285e3274472"]
}, Open  ]],

Cell[TextData[{
 "In this case, ",
 StyleBox["Cases[] ",
  FontSlant->"Italic"],
 "simply returns the input list, because all elements match. A more useful \
application of cases might be:"
}], "Text",
 CellChangeTimes->{{3.8994734412326913`*^9, 3.899473455239729*^9}, {
  3.8994735099263554`*^9, 
  3.8994735427991295`*^9}},ExpressionUUID->"1a851575-37d5-4aa5-a710-\
60ff60e21d8f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<here is a diverse list\>\"", ",", " ", 
     RowBox[{"-", "2"}], ",", " ", "2.0", ",", " ", "0", ",", " ", 
     RowBox[{"-", "0"}], ",", 
     RowBox[{"-", "0.0"}], ",", " ", 
     RowBox[{"-", "0.1"}]}], "}"}], ",", " ", 
   RowBox[{"_", "?", "Negative"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899473546996001*^9, 3.8994736033089857`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"a4dc510c-055a-4afe-9191-e1a986d98362"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "0.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8994735915199394`*^9, 3.8994736038494396`*^9}},
 CellLabel->
  "Out[129]=",ExpressionUUID->"3acd618a-82f8-4e54-98bb-90c5a4e2d347"]
}, Open  ]],

Cell["\<\
Here the negative-test (a predicate function, instead of a pattern) is \
applied, where Negative[] returns true in the appropriate case and false (or \
unevaluated, if the predicate is not applicable) in all others.\
\>", "Text",
 CellChangeTimes->{{3.899473637653205*^9, 3.89947367121185*^9}, {
  3.8994738235723667`*^9, 
  3.899473916114506*^9}},ExpressionUUID->"0719f33a-e15e-4771-83e9-\
7d63fafafd67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Negative", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "2"}], ",", 
    RowBox[{"-", "0.1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8994736755370736`*^9, 3.899473702942342*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"313b4204-685d-43d8-8524-ef3da6829732"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.899473690233275*^9, 3.8994737205500317`*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"2bc2c2f8-c624-4606-bf38-3b014c096d8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Negative", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{
   "\"\<here is a diverse list\>\"", ",", " ", "2.0", ",", " ", "0", ",", " ", 
    RowBox[{"-", "0"}], ",", 
    RowBox[{"-", "0.0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8994738456406155`*^9, 3.899473850279687*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"7fb27546-177c-4662-8c90-2b68c436b2ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Negative", "[", "\<\"here is a diverse list\"\>", "]"}], ",", 
   "False", ",", "False", ",", "False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.8994737375530825`*^9, 3.8994738550144105`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"867d3f9b-697c-4281-93fc-1540a41dc0e9"]
}, Open  ]],

Cell["\<\
On the topic of predicates, pure functions can also be used to implement \
them, here in combination with a test for the head of an element (testing if \
it is a list).\
\>", "Text",
 CellChangeTimes->{{3.899473892513197*^9, 
  3.8994739841832247`*^9}},ExpressionUUID->"04ccd279-ccb3-4c68-9c70-\
667e2115a818"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", " ", 
   RowBox[{"_List", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "#", "]"}], ">", "2"}], "&"}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.89947399814575*^9, 3.899474036403205*^9}, {
  3.899474073241499*^9, 3.8994741227758594`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"2b083a49-762b-4d2f-822f-526efd39382e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.899474036825432*^9, {3.8994740691673956`*^9, 3.899474074633505*^9}, 
   3.899474123072515*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"798b4e45-07d0-4b4d-a54b-0e007376c303"]
}, Open  ]],

Cell["\<\
Finally, the second of our functions does the same thing as the first, but \
for an even more complex pattern (again using BlankSequences liberally).\
\>", "Text",
 CellChangeTimes->{{3.899474301289095*^9, 
  3.8994743661573896`*^9}},ExpressionUUID->"ea3b5837-4198-4b53-9a67-\
687c471908da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"subproofs", "[", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"___", ",", 
        RowBox[{"{", 
         RowBox[{"Proofs", ",", 
          RowBox[{"OpenerView", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Arguments", ",", 
              RowBox[{"Column", "[", 
               RowBox[{"subproofs_", ",", "___"}], "]"}]}], "}"}], ",", 
            "___"}], "]"}]}], "}"}], ",", "___"}], "}"}], ",", "___"}], "]"}],
     "]"}], ":=", "subproofs"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"subproofs", "[", "proof_", "]"}], ":=", 
   RowBox[{"{", "}"}]}], ";"}]}], "Input",
 CellLabel->
  "In[140]:=",ExpressionUUID->"1d0866fb-87f2-4da6-a51c-7a3195509557"],

Cell[TextData[{
 "But with one caveat of a base case for a later recursion, in the form of an \
overloaded function (",
 StyleBox["subproofs[]",
  FontSlant->"Italic"],
 ") taking any possible pattern and binding it to the variable ",
 StyleBox["proof",
  FontSlant->"Italic"],
 ", but returning an empty list as a fixed value: this leads to the final \
topic to be discussed in this analysis, recursion."
}], "Text",
 CellChangeTimes->{{3.8994743855395203`*^9, 3.8994744330733185`*^9}, {
  3.899474496706503*^9, 3.899474551426324*^9}, {3.899536127075162*^9, 
  3.8995361483229055`*^9}},ExpressionUUID->"65d9f108-347b-4ced-a4ab-\
f6effae09215"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recursion", "Section",
 CellChangeTimes->{{3.898929260844139*^9, 
  3.898929264994703*^9}},ExpressionUUID->"5b1cf704-9cb7-4fbe-a850-\
0602be74857a"],

Cell["\<\
We now but the functions together to explain the functionality in terms of \
recursion, another paradigm implemented in Wolfram Language. This is the set \
of functions we are considering:\
\>", "Text",
 CellChangeTimes->{{3.898929268756711*^9, 3.8989292691132717`*^9}, {
  3.899396703064071*^9, 3.899396703726367*^9}, {3.8994745710990086`*^9, 
  3.899474623285108*^9}},ExpressionUUID->"49952909-5b88-4116-8ca4-\
c402bc7d9f48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"proofID", "[", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"___", ",", 
         RowBox[{"{", 
          RowBox[{"ID", ",", "id_"}], "}"}], ",", "___"}], "}"}], ",", 
       "___"}], "]"}], "]"}], ":=", "id"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"basically", " ", "an", " ", "extractor"}], "-", "function"}], 
    ",", " ", 
    RowBox[{"using", " ", "patterns"}]}], " ", "*)"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subproofs", "[", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"___", ",", 
         RowBox[{"{", 
          RowBox[{"Proofs", ",", 
           RowBox[{"OpenerView", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Arguments", ",", 
               RowBox[{"Column", "[", 
                RowBox[{"subproofs_", ",", "___"}], "]"}]}], "}"}], ",", 
             "___"}], "]"}]}], "}"}], ",", "___"}], "}"}], ",", "___"}], 
      "]"}], "]"}], ":=", "subproofs"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Same", " ", "as", " ", "above"}], ",", " ", 
    RowBox[{
    "but", " ", "with", " ", "more", " ", "complex", " ", "patterns"}]}], " ",
    "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"subproofs", "[", "proof_", "]"}], ":=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Stopping", " ", "condition", " ", "preparing", " ", "the", " ", 
    "recursion"}], " ", "*)"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getLeanTree", "[", "proof_", "]"}], ":=", 
  RowBox[{"Tree", "[", 
   RowBox[{
    RowBox[{"proofID", "[", "proof", "]"}], ",", 
    RowBox[{"getLeanTree", "/@", 
     RowBox[{"subproofs", "[", "proof", "]"}]}], ",", 
    RowBox[{"TreeElementLabelStyle", "->", 
     RowBox[{"All", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"White", ",", "16", ",", 
        RowBox[{"FontFamily", "->", "\"\<Times New Roman\>\""}]}], "]"}]}]}], 
    ",", 
    RowBox[{"TreeElementStyle", "->", 
     RowBox[{"All", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
        RowBox[{"RGBColor", "[", "\"\<#B6094A\>\"", "]"}]}], "]"}]}]}]}], 
   "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Putting", " ", "it", " ", "all", " ", "together", " ", "now"}], 
    ",", " ", 
    RowBox[{
    "plus", " ", "some", " ", "options", " ", "for", " ", "styling", " ", 
     "the", " ", "output"}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.899391875338323*^9, 3.899391878129467*^9}, {
  3.8994747353671036`*^9, 
  3.899474846265001*^9}},ExpressionUUID->"ce9d4512-86ca-4b63-9eb8-\
0f34fcc3afc0"],

Cell[TextData[{
 "One note on ",
 StyleBox["Proofs ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["Arguments",
  FontSlant->"Italic"],
 ", these are simply the names of heads in the proof-grid-structure that is \
the input for the main function, ",
 StyleBox["getLeanTree[]",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.8994746556325865`*^9, 
  3.8994747212843413`*^9}},ExpressionUUID->"b2ad5da0-d1cc-4fbd-bd39-\
52b88d3ba6df"],

Cell[TextData[{
 "Recursion is of course a call of a function to itself, which is seen here \
in ",
 StyleBox["getLeanTree[]",
  FontSlant->"Italic"],
 ", as the function constructs a tree with an integer delivered by proofID as \
the parent and the children as outputs from the recursive call mapped to the \
proofs returned by ",
 StyleBox["subproofs[]",
  FontSlant->"Italic"],
 ". Say two children are returned: the next recursion step makes a tree out \
of the \[OpenCurlyDoubleQuote]child proofs\[CloseCurlyDoubleQuote] (the \
\[OpenCurlyDoubleQuote]sub-proofs\[CloseCurlyDoubleQuote]) and again extracts \
the ids and makes the recursive call, now implementing the branching of the \
tree at the second level. "
}], "Text",
 CellChangeTimes->{{3.8994746302357545`*^9, 3.8994746326509023`*^9}, {
   3.8995355018329954`*^9, 3.8995355186918488`*^9}, {3.8995355686882544`*^9, 
   3.8995358032458615`*^9}, {3.8995359160252566`*^9, 3.8995359595985284`*^9}, 
   3.899536004037975*^9},ExpressionUUID->"22d1e2e8-faf7-444d-9bc2-\
1678dffc3b22"],

Cell[TextData[{
 "The fact that ",
 StyleBox["subproofs[] i",
  FontSlant->"Italic"],
 "s is overloaded to produce an empty list when no relevant pattern is \
present ensures that in the recursive mapping of ",
 StyleBox["getLeanTree[] ",
  FontSlant->"Italic"],
 "eventually an empty list is mapped to:"
}], "Text",
 CellChangeTimes->{
  3.899536008124158*^9},ExpressionUUID->"bafb993e-7f04-44dc-b03f-\
8d8feac37b5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tree", "[", 
  RowBox[{"\"\<id\>\"", ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8995359615598593`*^9, 3.899535988963725*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"208b8b06-2c15-4e31-82c8-2067a6ab9893"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["Trees",
   DynamicModuleBox[{Typeset`tree = HoldComplete[
     Tree["id", {}]]}, 
    NamespaceBox[{{}, 
      {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
       TagBox[InsetBox[
         FrameBox["\<\"id\"\>",
          Background->Directive[
            RGBColor[
            0.9607843137254902, 0.9882352941176471, 0.9764705882352941]],
          BaseStyle->GrayLevel[0],
          FrameMargins->{{2, 2}, {1, 1}},
          FrameStyle->Directive[
            RGBColor[
            0.4196078431372549, 0.6313725490196078, 0.4196078431372549], 
            AbsoluteThickness[1], 
            Opacity[1]],
          ImageSize->Automatic,
          RoundingRadius->4,
          StripOnInput->False], {1., 1.}],
        "DynamicName",
        BoxID -> "VertexID$1"]}}]]],
  AlignmentPoint->Center,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ContentSelectable->Automatic,
  DefaultBaseStyle->"TreeGraphics",
  Epilog->{},
  FormatType->StandardForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->None,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->{48.5, Automatic},
  LabelStyle->{},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->0.1,
  PlotRegion->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{{3.899535968407363*^9, 3.8995359895279045`*^9}},
 CellLabel->
  "Out[143]=",ExpressionUUID->"612754a6-206b-471b-bacf-ca975c202a60"]
}, Open  ]],

Cell[TextData[{
 "A leaf-node is reached, here corresponding to a mathematical axiom which in \
turn does not depend on other axioms: The recursion stops, a base case is \
reached in the sense that a tree with empty children is defined as a leaf, \
though the actual empty list is returned not by the recursing function (",
 StyleBox["getLeanTree[]",
  FontSlant->"Italic"],
 ") but by another (",
 StyleBox["subproofs[]",
  FontSlant->"Italic"],
 ")."
}], "Text",
 CellChangeTimes->{{3.899536038248081*^9, 3.8995360963347864`*^9}, {
  3.899536183503849*^9, 
  3.89953624721049*^9}},ExpressionUUID->"57a412fe-7360-4803-a633-\
3fdf19c0dd60"],

Cell["\<\
This section closes with a more canonical example of recursion with a direct \
base case, the Fibonacci sequence, and an application to lists, showing how \
lists are once again the essential auxiliary concept.\
\>", "Text",
 CellChangeTimes->{{3.899536280761682*^9, 
  3.899536366807001*^9}},ExpressionUUID->"adf4f530-e059-4a09-9927-\
913ee0d526b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "1", "]"}], " ", "=", " ", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", "Fibonacci", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "2", "]"}], " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"n", "-", "2"}], "]"}], "+", 
    RowBox[{"f", "[", 
     RowBox[{"n", "-", "1"}], "]"}]}], "/;", 
   RowBox[{"n", ">", "2"}]}]}]}], "Input",
 CellChangeTimes->{{3.8995365112289267`*^9, 3.899536662053522*^9}, {
  3.8995366960314517`*^9, 3.899536714036729*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"32f36efd-b257-40b5-be6f-a4c7bf077d71"],

Cell["\<\
It turns out specific rules are looked up before more general rules, which is \
helpful for implementing recursion, since we can omit the non-base condition \
after simply defining the base cases.\
\>", "Text",
 CellChangeTimes->{{3.899536774198138*^9, 
  3.8995368554482455`*^9}},ExpressionUUID->"35d01e62-f75a-4418-a371-\
4c9af7777709"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"n", "-", "2"}], "]"}], "+", 
   RowBox[{"f", "[", 
    RowBox[{"n", "-", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8995368662001696`*^9, 3.899536868762395*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"4f867ef0-a11e-435e-ade6-4da1cca1629e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"f", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899536609724842*^9, 3.899536618338641*^9}, {
  3.8995368866544824`*^9, 3.8995368900637264`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"f4fb99ee-326b-4e29-957d-3489c89af5ca"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610"}], "}"}]], "Output",
 CellChangeTimes->{3.899536890595969*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"5b3da796-d2eb-496b-ba40-18537bf0dd09"]
}, Open  ]],

Cell["\<\
The following helpful function lets us analyze what is being evaluated in \
what order; this can be especially helpful when it comes to recursion, often \
implementing many steps in relatively sparse syntax.\
\>", "Text",
 CellChangeTimes->{{3.8995370133945336`*^9, 
  3.8995370881349325`*^9}},ExpressionUUID->"e6df5913-f545-46f8-8b9c-\
fa6be123f06b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TracePrint", "[", 
  RowBox[{"f", "[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.899536926170144*^9, 3.899536985830699*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"52bb33dd-d00a-4973-8222-88d2e132e5e2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{" ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"f", "[", "3", "]"}],
    HoldForm]}],
  SequenceForm[
   Indent[1], 
   HoldForm[
    $CellContext`f[3]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369867118254`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"9728e366-7514-48dd-b4c7-d001957b0aa3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox["f",
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[$CellContext`f]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369867198515`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"0cfd80da-a591-4484-9af7-1bd8762ea055"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox["3",
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[3]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986727853*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"cb381616-cc02-4a4d-8054-dc35c705c22c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"RuleCondition", "[", 
     RowBox[{
      RowBox[{"$ConditionHold", "[", 
       RowBox[{"$ConditionHold", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"3", "-", "2"}], "]"}], "+", 
         RowBox[{"f", "[", 
          RowBox[{"3", "-", "1"}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"3", ">", "2"}]}], "]"}],
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[
    RuleCondition[
     $ConditionHold[
      $ConditionHold[$CellContext`f[3 - 2] + $CellContext`f[3 - 1]]], 3 > 2]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986736007*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"3d086887-a2be-432c-911b-631e3a249d62"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"   ", "\[InvisibleSpace]", 
   TagBox["RuleCondition",
    HoldForm]}],
  SequenceForm[
   Indent[3], 
   HoldForm[RuleCondition]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369867450438`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"97dfa87a-4f84-4721-813e-1b07d035c0a3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"   ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"3", ">", "2"}],
    HoldForm]}],
  SequenceForm[
   Indent[3], 
   HoldForm[3 > 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369867450438`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"68b5326f-f9c2-4808-be90-ce8504f51b6f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"    ", "\[InvisibleSpace]", 
   TagBox["Greater",
    HoldForm]}],
  SequenceForm[
   Indent[4], 
   HoldForm[Greater]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986752408*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"7e46ac1f-758e-4173-b943-036a4e72b34b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"    ", "\[InvisibleSpace]", 
   TagBox["3",
    HoldForm]}],
  SequenceForm[
   Indent[4], 
   HoldForm[3]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986752408*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"805d7980-0c75-4778-8b9b-9881e13088fd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"    ", "\[InvisibleSpace]", 
   TagBox["2",
    HoldForm]}],
  SequenceForm[
   Indent[4], 
   HoldForm[2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986752408*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"27f65929-634d-49d1-8242-6fec5ee02163"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"   ", "\[InvisibleSpace]", 
   TagBox["True",
    HoldForm]}],
  SequenceForm[
   Indent[3], 
   HoldForm[True]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369867604227`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"56720cbc-056e-4258-998a-de55d4057925"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"RuleCondition", "[", 
     RowBox[{
      RowBox[{"$ConditionHold", "[", 
       RowBox[{"$ConditionHold", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"3", "-", "2"}], "]"}], "+", 
         RowBox[{"f", "[", 
          RowBox[{"3", "-", "1"}], "]"}]}], "]"}], "]"}], ",", "True"}], "]"}],
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[
    RuleCondition[
     $ConditionHold[
      $ConditionHold[$CellContext`f[3 - 2] + $CellContext`f[3 - 1]]], True]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986768429*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"af35b83a-8668-4058-89bb-908ea7463720"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"$ConditionHold", "[", 
     RowBox[{"$ConditionHold", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"3", "-", "2"}], "]"}], "+", 
       RowBox[{"f", "[", 
        RowBox[{"3", "-", "1"}], "]"}]}], "]"}], "]"}],
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[
    $ConditionHold[
     $ConditionHold[$CellContext`f[3 - 2] + $CellContext`f[3 - 1]]]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986768429*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"4d1a2278-d3b0-47ae-9c18-02e575d70f33"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"   ", "\[InvisibleSpace]", 
   TagBox["$ConditionHold",
    HoldForm]}],
  SequenceForm[
   Indent[3], 
   HoldForm[$ConditionHold]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986776522*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"2167c450-2ad0-498c-93a8-71572abaef19"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{" ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"3", "-", "2"}], "]"}], "+", 
     RowBox[{"f", "[", 
      RowBox[{"3", "-", "1"}], "]"}]}],
    HoldForm]}],
  SequenceForm[
   Indent[1], 
   HoldForm[$CellContext`f[3 - 2] + $CellContext`f[3 - 1]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986776522*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"0d3aa662-8bff-4d4c-92cb-d6f3915112d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox["Plus",
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[Plus]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986776522*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"afcf7baa-9c2c-4b1b-a9bd-39193a9608c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"f", "[", 
     RowBox[{"3", "-", "2"}], "]"}],
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[
    $CellContext`f[3 - 2]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369867844324`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"2a7423e4-49a1-4c86-9898-1fa70de5bfd2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"   ", "\[InvisibleSpace]", 
   TagBox["f",
    HoldForm]}],
  SequenceForm[
   Indent[3], 
   HoldForm[$CellContext`f]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369867844324`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"d5398355-bc51-4679-8154-3b0e5a25ee2f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"   ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"3", "-", "2"}],
    HoldForm]}],
  SequenceForm[
   Indent[3], 
   HoldForm[3 - 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369867844324`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"2c9be216-c658-45c5-87a6-964b17701419"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"    ", "\[InvisibleSpace]", 
   TagBox["Plus",
    HoldForm]}],
  SequenceForm[
   Indent[4], 
   HoldForm[Plus]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868005524`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"91314082-ae2c-486c-b7f6-9540e6751a49"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"    ", "\[InvisibleSpace]", 
   TagBox["3",
    HoldForm]}],
  SequenceForm[
   Indent[4], 
   HoldForm[3]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868005524`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"698e82f9-4833-4e75-ac47-48774a207aef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"    ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"-", "2"}],
    HoldForm]}],
  SequenceForm[
   Indent[4], 
   HoldForm[-2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.89953698680508*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"a3cbe7df-9899-4fcc-b0a0-4e009ffa8314"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"   ", "\[InvisibleSpace]", 
   TagBox["1",
    HoldForm]}],
  SequenceForm[
   Indent[3], 
   HoldForm[1]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986808601*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"8e1c5056-bb1e-454e-8841-4e10d302db44"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"f", "[", "1", "]"}],
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[
    $CellContext`f[1]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986808601*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"4c389eb4-1e07-4ae3-8598-87815eae5379"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox["1",
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[1]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868166313`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"aab85840-8a46-4a42-92c6-dc73877a40d5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"f", "[", 
     RowBox[{"3", "-", "1"}], "]"}],
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[
    $CellContext`f[3 - 1]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868166313`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"d6f13050-f6e8-4aed-b4d0-be193fdd8083"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"   ", "\[InvisibleSpace]", 
   TagBox["f",
    HoldForm]}],
  SequenceForm[
   Indent[3], 
   HoldForm[$CellContext`f]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868246517`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"199cb36d-71c0-44f8-af9a-db2164aa1ba5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"   ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"3", "-", "1"}],
    HoldForm]}],
  SequenceForm[
   Indent[3], 
   HoldForm[3 - 1]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868246517`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"523378c5-4531-4e61-bbda-64497a1697e7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"    ", "\[InvisibleSpace]", 
   TagBox["Plus",
    HoldForm]}],
  SequenceForm[
   Indent[4], 
   HoldForm[Plus]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868246517`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"6d3fcee7-2c10-4fc1-8373-110ba7a62388"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"    ", "\[InvisibleSpace]", 
   TagBox["3",
    HoldForm]}],
  SequenceForm[
   Indent[4], 
   HoldForm[3]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868326187`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"9df59dff-f2da-4295-969e-0a1cf0541129"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"    ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"-", "1"}],
    HoldForm]}],
  SequenceForm[
   Indent[4], 
   HoldForm[-1]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986835813*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"2f584bcb-4056-46a1-b184-a6a4ae7bc77c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"   ", "\[InvisibleSpace]", 
   TagBox["2",
    HoldForm]}],
  SequenceForm[
   Indent[3], 
   HoldForm[2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986841113*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"c46b90c0-47f3-4b07-9876-04b9bb55eff6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"f", "[", "2", "]"}],
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[
    $CellContext`f[2]]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.899536986841113*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"0c7072ba-0142-400b-8e55-0ef7320f0687"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"  ", "\[InvisibleSpace]", 
   TagBox["1",
    HoldForm]}],
  SequenceForm[
   Indent[2], 
   HoldForm[1]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868491273`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"cc98bc3a-c252-47e2-bd5c-ef5c14cee3fa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{" ", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"1", "+", "1"}],
    HoldForm]}],
  SequenceForm[
   Indent[1], 
   HoldForm[1 + 1]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868491273`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"79a14aba-7e58-47a3-9fc7-1b1576e7a515"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{" ", "\[InvisibleSpace]", 
   TagBox["2",
    HoldForm]}],
  SequenceForm[
   Indent[1], 
   HoldForm[2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.899536943413746*^9, 3.8995369868491273`*^9}},
 CellLabel->
  "During evaluation of \
In[169]:=",ExpressionUUID->"bc754a11-da9b-4e86-8ac8-3d88d04c4da8"]
}, Open  ]],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.899536943883265*^9, 3.8995369868571777`*^9}},
 CellLabel->
  "Out[169]=",ExpressionUUID->"e58f9e5c-a6eb-4287-867b-2f164a98d15b"]
}, Open  ]],

Cell[TextData[{
 "The final (simple!) list-recursion example echoes",
 StyleBox[" getLeanTree[]",
  FontSlant->"Italic"],
 " in the way it requires an empty list base case and recursively folds into \
itself."
}], "Text",
 CellChangeTimes->{{3.8995371279797044`*^9, 
  3.8995372387680883`*^9}},ExpressionUUID->"c5e54c76-bf2f-49c6-9de5-\
047facbf5bb9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"l", "[", "list_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"l", "[", 
     RowBox[{"Rest", "[", "list", "]"}], "]"}], " ", "+", " ", "1"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "length", " ", "of", " ", "a", " ", "list", " ", "is", " ", "rest", " ", 
     RowBox[{"(", "tail", ")"}]}], " ", "+", " ", "1"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "[", 
   RowBox[{"{", "}"}], "]"}], " ", ":=", " ", "0"}]}], "Input",
 CellChangeTimes->{{3.899537245476598*^9, 3.8995373151720963`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"6b9d6f9d-5cf5-42c6-a5d5-01c81212cb11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8995373231947136`*^9, 3.8995373283598337`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"7aa21122-5ffb-405f-bed4-b056de836d87"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.8995373291271744`*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"156fae11-2b30-4ea4-9ea7-bdddeb3364c6"]
}, Open  ]],

Cell["\<\
The observation here is that a simple problem can actually appear more \
complex, simply because various paradigms and potentially some complex \
patterns are being mixed at the same time.\
\>", "Text",
 CellChangeTimes->{{3.899537352300452*^9, 
  3.8995374299598007`*^9}},ExpressionUUID->"b256c8db-8230-484e-8e91-\
e06db4062225"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Limitations and Summary", "Section",
 CellChangeTimes->{{3.8989293086799808`*^9, 3.8989293101399717`*^9}, {
  3.8989304615209646`*^9, 
  3.8989304629051495`*^9}},ExpressionUUID->"aabc49ba-d10c-4a93-8776-\
684025622aaa"],

Cell["\<\
This study did not cover numerics, graphics programming,  front-end \
programming, or writing packages, all major topics related to the current \
discussion: An Introduction to Programming with Mathematica (2005, Wellin et \
al.) completes the picture at the intended overview level of analysis, of \
exactly these missing topics. The focus here has been on one particular \
example, solving one problem, in Wolfram Language; it is involved enough to \
be viewed in context of the major themes chosen after introducing the \
language in broad strokes. These themes were lists; functional programming; \
rule-based programming as the particularly helpful approach in this \
situation; and recursion, which we could not have easily done without.\
\>", "Text",
 CellChangeTimes->{{3.8989293261344185`*^9, 3.8989294516971064`*^9}, {
  3.898929486562399*^9, 3.898929559818592*^9}, {3.898930394696986*^9, 
  3.898930454340646*^9}, {3.8989304868870373`*^9, 3.8989306289334936`*^9}, {
  3.898930663313635*^9, 3.898930665122369*^9}, {3.8993006066016164`*^9, 
  3.899300630102814*^9}, {3.8993911377865047`*^9, 3.8993911435238733`*^9}, {
  3.899392721129947*^9, 3.8993927781475616`*^9}, {3.8994750873998594`*^9, 
  3.8994750924986563`*^9}, {3.8995374372288284`*^9, 3.8995374375316625`*^9}, {
  3.8995374782183747`*^9, 
  3.899537490296482*^9}},ExpressionUUID->"0ffbbea2-a558-4950-b17d-\
98f468999b96"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.8989296957108555`*^9, 
  3.8989296967889905`*^9}},ExpressionUUID->"cb679f0e-e9e5-4fa2-a320-\
c3f0335ab6e2"],

Cell[TextData[{
 "Heseltine, J. (2023) ",
 StyleBox["Empirical metamathematics: extending the Lean-to-Mathematica \
bridge. ",
  FontSlant->"Italic"],
 "Wolfram Community. Available at: \
https://community.wolfram.com/groups/-/m/t/2957419 (Accessed: 26 July 2023).",
 "\nMangano, S. (2010) ",
 StyleBox["Mathematica Cookbook. ",
  FontSlant->"Italic"],
 "Sebastopol, CA: O\[CloseCurlyQuote]Reilly Media, Inc.",
 "\nWellin, P. R. (2005) ",
 StyleBox["An Introduction to Programming in Mathematica. ",
  FontSlant->"Italic"],
 "Cambridge, UK: Cambridge University Press.\nWolfram Research (2023) Wolfram \
Language & System Documentation Center. Available at: \
https://reference.wolfram.com/language/ (Accessed: 23 July 2023)."
}], "Text",
 CellChangeTimes->{{3.8989301239500237`*^9, 3.898930127469351*^9}, {
   3.8989301670544496`*^9, 3.898930168945137*^9}, {3.898930272869325*^9, 
   3.8989303371902237`*^9}, 3.898930369411821*^9, {3.8991036209629145`*^9, 
   3.8991036328924227`*^9}, {3.8991036850074425`*^9, 3.899103712564625*^9}, {
   3.8991037749901505`*^9, 3.899103776132259*^9}, {3.8993009534152403`*^9, 
   3.8993009743836713`*^9}, {3.8993010694675846`*^9, 3.89930109152083*^9}, {
   3.899391192200072*^9, 3.89939122515313*^9}, {3.8993912674318*^9, 
   3.8993913278387794`*^9}},ExpressionUUID->"6ba92103-54f0-4b90-b6f6-\
2017b83919d5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{701, 655.5},
WindowMargins->{{Automatic, 208.5}, {Automatic, 48.5}},
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c3aed98d-eadb-4930-89b3-48a177ecc5e7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 199, 3, 160, "Title",ExpressionUUID->"f7c23c01-db02-47a3-a0e0-f1cd2dd30822"],
Cell[782, 27, 323, 7, 85, "Subtitle",ExpressionUUID->"0c39255d-6c5a-4b72-8be0-422dfaa562f8"],
Cell[1108, 36, 908, 14, 104, "Text",ExpressionUUID->"bb3bad3f-d260-4a39-928d-b83d3785d126"],
Cell[2019, 52, 1942, 56, 219, "Input",ExpressionUUID->"3fc6da08-13aa-400e-bb92-92ec725b23c4"],
Cell[3964, 110, 782, 16, 104, "Text",ExpressionUUID->"c79ca2fc-beb0-483f-8755-7878ecea51fb"],
Cell[CellGroupData[{
Cell[4771, 130, 162, 3, 69, "Chapter",ExpressionUUID->"1139bdf8-149e-4d3d-81da-eb38fa788dd8"],
Cell[4936, 135, 752, 12, 127, "Text",ExpressionUUID->"e22f44fa-5143-45b4-ba6f-f675825571d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5725, 152, 169, 3, 69, "Chapter",ExpressionUUID->"c3d925d0-f1be-4b4b-bb09-18465abfc1df"],
Cell[5897, 157, 966, 15, 173, "Text",ExpressionUUID->"00820163-b490-4547-9ce3-524d76d24e61"],
Cell[6866, 174, 421, 8, 81, "Text",ExpressionUUID->"0813500e-5c56-4148-b21c-5c1850a08fef"],
Cell[CellGroupData[{
Cell[7312, 186, 217, 4, 67, "Section",ExpressionUUID->"288a154a-fb8b-45cc-a5f8-236052c6bb5e"],
Cell[7532, 192, 313, 7, 58, "Text",ExpressionUUID->"7d1c0b6f-e258-406a-a9ac-74fb44dbddfa"],
Cell[7848, 201, 446, 12, 28, "Input",ExpressionUUID->"2659c283-35c5-45fd-acfc-30b54ffc98e7"],
Cell[8297, 215, 643, 12, 150, "Text",ExpressionUUID->"77746dc5-777d-49fa-8831-310190cd9c0b"],
Cell[CellGroupData[{
Cell[8965, 231, 266, 5, 28, "Input",ExpressionUUID->"fee3d6df-450f-450e-9495-3c80d5e665e7"],
Cell[9234, 238, 373, 11, 46, "Output",ExpressionUUID->"81aa46f8-297e-4591-910a-9b3ba42c3324"]
}, Open  ]],
Cell[9622, 252, 371, 8, 35, "Text",ExpressionUUID->"2313732a-4a4a-4d16-9f34-ba14d26d14b2"],
Cell[CellGroupData[{
Cell[10018, 264, 204, 3, 28, "Input",ExpressionUUID->"bbb40ee0-3fd3-4bd8-ac8f-fac1281764f0"],
Cell[10225, 269, 229, 4, 32, "Output",ExpressionUUID->"c5562328-5b6b-49c5-9fe8-f86f69436b9b"]
}, Open  ]],
Cell[10469, 276, 164, 3, 35, "Text",ExpressionUUID->"ed2ec935-8b10-47e1-ae77-9f2d63dbab96"],
Cell[CellGroupData[{
Cell[10658, 283, 239, 4, 28, "Input",ExpressionUUID->"89283e6b-1774-4ec7-b97a-d17b2dd3f7e7"],
Cell[10900, 289, 257, 5, 32, "Output",ExpressionUUID->"a129fd1d-1888-4ea1-a347-d74534dc7bb8"]
}, Open  ]],
Cell[11172, 297, 297, 8, 58, "Text",ExpressionUUID->"0d4e5721-941a-4079-8bcf-89ba7623312b"],
Cell[CellGroupData[{
Cell[11494, 309, 351, 8, 28, "Input",ExpressionUUID->"bfe3b192-836e-4b67-9d5c-28671369fdfc"],
Cell[11848, 319, 282, 5, 32, "Output",ExpressionUUID->"28a07fa4-ce34-4fed-9ddd-0e996dc68950"]
}, Open  ]],
Cell[12145, 327, 350, 12, 35, "Text",ExpressionUUID->"629eca9f-e502-437f-b8e5-edad18b41bf2"],
Cell[12498, 341, 391, 9, 58, "Text",ExpressionUUID->"d6d4cfdf-1cfc-4db7-9d7c-4f0d8db79e2f"],
Cell[CellGroupData[{
Cell[12914, 354, 232, 4, 28, "Input",ExpressionUUID->"e0c94dfb-d7db-45c4-89f1-e9bfe3596e1e"],
Cell[13149, 360, 415, 13, 97, "Output",ExpressionUUID->"4562e2fb-c75e-4da7-99e9-c31b15279c22"]
}, Open  ]],
Cell[13579, 376, 399, 8, 58, "Text",ExpressionUUID->"0b3c5451-3501-44bf-9577-1884b48f94a7"],
Cell[CellGroupData[{
Cell[14003, 388, 497, 12, 28, "Input",ExpressionUUID->"85c846ef-37b0-4a90-b164-d60907c92758"],
Cell[14503, 402, 740, 21, 78, "Output",ExpressionUUID->"d84322a4-1786-47bb-a9fa-ccc45676a913"]
}, Open  ]],
Cell[15258, 426, 298, 7, 35, "Text",ExpressionUUID->"45710bc0-b5b6-43ac-a019-b6043eda031e"],
Cell[CellGroupData[{
Cell[15581, 437, 653, 16, 28, "Input",ExpressionUUID->"480f7487-9c44-4fd5-b410-bb57ac4b0ef3"],
Cell[16237, 455, 730, 22, 95, "Output",ExpressionUUID->"a4a7e482-abae-4954-b77a-f5032158d286"]
}, Open  ]],
Cell[16982, 480, 503, 9, 81, "Text",ExpressionUUID->"88bfea34-a3a0-4809-a65b-8f64ab3b7848"],
Cell[17488, 491, 1325, 35, 219, "Text",ExpressionUUID->"e47364ed-ff85-47a1-9709-1cf82f97565e"],
Cell[CellGroupData[{
Cell[18838, 530, 493, 13, 30, "Input",ExpressionUUID->"90b8ea8a-078a-424c-8d06-7f16a36f5368"],
Cell[19334, 545, 1166, 38, 81, "Output",ExpressionUUID->"c0c892a0-c70d-4750-b867-8c3f4d4a927f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20537, 588, 250, 5, 28, "Input",ExpressionUUID->"4140e9ce-ca9e-4322-842c-63264323bbc9"],
Cell[20790, 595, 193, 4, 33, "Output",ExpressionUUID->"237e4862-fce7-4cf1-81e3-118fc63fcbf1"]
}, Open  ]],
Cell[20998, 602, 326, 10, 35, "Text",ExpressionUUID->"d2bc02ac-657c-4665-9ccb-529675eb7c81"],
Cell[21327, 614, 918, 15, 150, "Text",ExpressionUUID->"2be271bf-1766-40cb-b66d-0b08643cf3d7"],
Cell[22248, 631, 306, 7, 58, "Text",ExpressionUUID->"176ffc13-9058-4f9e-b181-7d030a4ef2a9"],
Cell[22557, 640, 284, 6, 28, "Input",ExpressionUUID->"21b88fec-e5b4-44e8-88d2-b17cf3bd0a17"],
Cell[CellGroupData[{
Cell[22866, 650, 309, 7, 28, "Input",ExpressionUUID->"67b4077b-e78f-4ed2-933f-ad75a06d5493"],
Cell[23178, 659, 218, 5, 32, "Output",ExpressionUUID->"b2700a0e-86f0-4b2c-ba55-04bde6231221"]
}, Open  ]],
Cell[23411, 667, 192, 3, 35, "Text",ExpressionUUID->"0e17ce5f-187c-4e0b-adc9-2be71b52bce9"],
Cell[23606, 672, 278, 6, 28, "Input",ExpressionUUID->"75cf13b6-c1c6-42ca-82b4-73dca2643e57"],
Cell[CellGroupData[{
Cell[23909, 682, 337, 8, 28, "Input",ExpressionUUID->"65c112ff-54ce-4868-8912-68545733f9e2"],
Cell[24249, 692, 358, 9, 32, "Output",ExpressionUUID->"395ecbfe-7451-4602-94d9-1d73c4d72191"]
}, Open  ]],
Cell[24622, 704, 395, 8, 58, "Text",ExpressionUUID->"19ca73d4-70ba-4258-a6dd-570b336ec40a"],
Cell[25020, 714, 254, 5, 28, "Input",ExpressionUUID->"8d39a0a9-00f5-4fd2-af6a-0653d2ca6055"],
Cell[CellGroupData[{
Cell[25299, 723, 364, 8, 28, "Input",ExpressionUUID->"57497cb7-1ae5-416d-82e1-dd62263c858b"],
Cell[25666, 733, 308, 7, 32, "Output",ExpressionUUID->"de3595a4-fe3f-4cc5-8931-c41632dfb3b7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26023, 746, 222, 4, 67, "Section",ExpressionUUID->"2d81ac97-ab32-4622-8fd7-aef6a384f54a"],
Cell[26248, 752, 1253, 21, 196, "Text",ExpressionUUID->"12eff140-df22-40e0-93cd-9f96eb5f013f"],
Cell[27504, 775, 466, 9, 81, "Text",ExpressionUUID->"7ab05f99-2afa-4253-aa30-07e7f29483c3"],
Cell[CellGroupData[{
Cell[27995, 788, 2238, 52, 409, "Input",ExpressionUUID->"221e1245-2c73-4725-9dcf-4117e7292968"],
Cell[30236, 842, 1657, 29, 416, "Output",ExpressionUUID->"5c6ed035-9a0b-46bd-b904-cb18d3debad8"]
}, {2}]],
Cell[31905, 874, 818, 13, 150, "Text",ExpressionUUID->"d5493b97-ce76-48b3-9318-d78f317b157b"],
Cell[32726, 889, 305, 7, 28, "Input",ExpressionUUID->"de15373d-dfc6-43a2-b6ab-e91660d66312"],
Cell[33034, 898, 297, 9, 35, "Text",ExpressionUUID->"b9de4002-c102-4010-bd60-ceb9e7b5e34d"],
Cell[CellGroupData[{
Cell[33356, 911, 287, 6, 28, "Input",ExpressionUUID->"e8036e5c-5d28-43c5-b3c1-3a7811c7ed15"],
Cell[33646, 919, 456, 13, 32, "Output",ExpressionUUID->"8c272bcb-775e-4a6b-8873-cc5b8c5dc19d"]
}, Open  ]],
Cell[34117, 935, 196, 3, 35, "Text",ExpressionUUID->"09621998-fc83-4fac-9406-6bdb05fd3b44"],
Cell[CellGroupData[{
Cell[34338, 942, 389, 10, 28, "Input",ExpressionUUID->"df57e72c-a7ed-4baf-9678-3c745731fe66"],
Cell[34730, 954, 458, 13, 32, "Output",ExpressionUUID->"0d48a546-54d8-4655-8489-9e00c5e8e8ce"]
}, Open  ]],
Cell[35203, 970, 329, 7, 58, "Text",ExpressionUUID->"4c771090-7b52-430a-a821-1f930d25f864"],
Cell[CellGroupData[{
Cell[35557, 981, 539, 13, 28, "Input",ExpressionUUID->"77cfd193-e0ca-478c-885d-de6454c0eac8"],
Cell[36099, 996, 480, 13, 32, "Output",ExpressionUUID->"ed335999-f9c9-4580-a7cb-5b7a34655819"]
}, Open  ]],
Cell[36594, 1012, 800, 22, 127, "Text",ExpressionUUID->"735a44c4-fa59-43f9-bc40-03c32a8cf80a"],
Cell[CellGroupData[{
Cell[37419, 1038, 545, 14, 28, "Input",ExpressionUUID->"a31187b4-b43d-4238-9192-3c97ea13b5cb"],
Cell[37967, 1054, 206, 4, 32, "Output",ExpressionUUID->"a90192d5-fbcd-4def-a424-9c7ff860d92c"]
}, Open  ]],
Cell[38188, 1061, 550, 9, 58, "Text",ExpressionUUID->"5fc6235e-9a51-4198-aa73-bb49d2e2ad2d"],
Cell[CellGroupData[{
Cell[38763, 1074, 488, 12, 28, "Input",ExpressionUUID->"05ce0f90-8966-44d7-a1e2-ebe6d731e383"],
Cell[39254, 1088, 206, 4, 32, "Output",ExpressionUUID->"11c5f936-b0a8-40e9-ae8a-3b55c6ae5f18"]
}, Open  ]],
Cell[39475, 1095, 585, 10, 104, "Text",ExpressionUUID->"28700660-b16b-4198-b814-30d96ed1cc01"],
Cell[40063, 1107, 832, 21, 86, "Input",ExpressionUUID->"400dbb4a-6709-4df1-9c2b-a51196d52508"],
Cell[40898, 1130, 390, 8, 58, "Text",ExpressionUUID->"871fbf8d-1cce-404b-9844-acc948f066f0"],
Cell[41291, 1140, 51417, 1279, 214, "Output",ExpressionUUID->"edd9f82e-25eb-4814-81d9-0aad4a5fd903"],
Cell[92711, 2421, 430, 8, 58, "Text",ExpressionUUID->"5242f9b9-7668-4f2d-bc5d-5f96173cb021"],
Cell[CellGroupData[{
Cell[93166, 2433, 183, 4, 28, "Input",ExpressionUUID->"29cb0364-ec8c-475f-a663-bbcd62882503"],
Cell[93352, 2439, 170, 4, 32, "Output",ExpressionUUID->"99c0a661-6363-43c9-b764-2f4f8a13a2ae"]
}, Closed]],
Cell[93537, 2446, 413, 8, 77, "Text",ExpressionUUID->"cca4a2d2-bf04-47f9-9c4f-735a90c58f2b"],
Cell[CellGroupData[{
Cell[93975, 2458, 217, 3, 28, "Input",ExpressionUUID->"241d0293-f31b-425d-b38a-4d74e49b49e2"],
Cell[94195, 2463, 112511, 2404, 316, "Output",ExpressionUUID->"1c431665-6c15-4e0a-a599-637a9ef4d5e7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[206755, 4873, 171, 3, 67, "Section",ExpressionUUID->"b06a79f5-3bef-4e80-a553-1b9df63c13cc"],
Cell[206929, 4878, 600, 10, 81, "Text",ExpressionUUID->"9daf26ab-168c-434d-a4ff-9ccf7e23d81c"],
Cell[207532, 4890, 769, 23, 86, "Input",ExpressionUUID->"ae6da0be-55a5-4f7c-a436-a19175134f68"],
Cell[208304, 4915, 886, 15, 150, "Text",ExpressionUUID->"f5fea923-4eec-459b-ab45-432a0cc6df45"],
Cell[209193, 4932, 112527, 2404, 460, "Output",ExpressionUUID->"d26c0f82-83da-47f1-a090-e960a2336774"],
Cell[321723, 7338, 773, 13, 104, "Text",ExpressionUUID->"4b7d98a9-1128-4b75-96a8-05cdc6230586"],
Cell[CellGroupData[{
Cell[322521, 7355, 379, 8, 48, "Input",ExpressionUUID->"1ff2605c-45d2-4594-953b-0e852e233a07"],
Cell[322903, 7365, 196, 3, 32, "Output",ExpressionUUID->"2ab02529-5274-4a86-9103-d0445122dad7"]
}, Open  ]],
Cell[323114, 7371, 213, 5, 35, "Text",ExpressionUUID->"49b623ec-92fd-4a18-9439-113d5ac58645"],
Cell[CellGroupData[{
Cell[323352, 7380, 565, 17, 28, "Input",ExpressionUUID->"a9a2cf23-f04f-4fc7-bd33-9877b471b06e"],
Cell[323920, 7399, 377, 11, 32, "Output",ExpressionUUID->"0c2b4879-787c-412b-9592-a3372704e681"]
}, Open  ]],
Cell[324312, 7413, 686, 14, 127, "Text",ExpressionUUID->"431390d4-1754-40c2-acf1-0f5c4e5c0803",
 InitializationCell->True],
Cell[325001, 7429, 321, 7, 58, "Text",ExpressionUUID->"60afb37b-f6af-4418-a8d6-4bac709001a2"],
Cell[CellGroupData[{
Cell[325347, 7440, 256, 5, 28, "Input",ExpressionUUID->"e1390778-207c-4cb6-ad7d-67f733740abd"],
Cell[325606, 7447, 156, 3, 32, "Output",ExpressionUUID->"ce56864e-0ff4-4a31-874f-7f8cc2b1b520"]
}, Open  ]],
Cell[325777, 7453, 469, 9, 58, "Text",ExpressionUUID->"c1c176d9-3677-46fc-9058-d1bff79bf8c0"],
Cell[326249, 7464, 446, 12, 28, "Input",ExpressionUUID->"9cb399ce-331a-4d14-80dc-e2b0e35fe18c"],
Cell[326698, 7478, 379, 9, 58, "Text",ExpressionUUID->"aa8cbfcb-a73d-41c1-a69a-10f1de7ea778"],
Cell[327080, 7489, 424, 12, 28, "Input",ExpressionUUID->"79041ada-66a4-4c62-90ac-e947e4ca9238"],
Cell[CellGroupData[{
Cell[327529, 7505, 346, 8, 28, "Input",ExpressionUUID->"c6243b71-9603-493f-85d3-00b25855d8d5"],
Cell[327878, 7515, 112577, 2406, 95, "Output",ExpressionUUID->"d0efb431-8e5a-4755-871b-c285e3274472"]
}, Open  ]],
Cell[440470, 9924, 382, 10, 58, "Text",ExpressionUUID->"1a851575-37d5-4aa5-a710-60ff60e21d8f"],
Cell[CellGroupData[{
Cell[440877, 9938, 511, 12, 28, "Input",ExpressionUUID->"a4dc510c-055a-4afe-9191-e1a986d98362"],
Cell[441391, 9952, 267, 7, 32, "Output",ExpressionUUID->"3acd618a-82f8-4e54-98bb-90c5a4e2d347"]
}, Open  ]],
Cell[441673, 9962, 415, 8, 81, "Text",ExpressionUUID->"0719f33a-e15e-4771-83e9-7d63fafafd67"],
Cell[CellGroupData[{
Cell[442113, 9974, 307, 8, 28, "Input",ExpressionUUID->"313b4204-685d-43d8-8524-ef3da6829732"],
Cell[442423, 9984, 228, 5, 32, "Output",ExpressionUUID->"2bc2c2f8-c624-4606-bf38-3b014c096d8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442688, 9994, 387, 9, 28, "Input",ExpressionUUID->"7fb27546-177c-4662-8c90-2b68c436b2ad"],
Cell[443078, 10005, 339, 7, 32, "Output",ExpressionUUID->"867d3f9b-697c-4281-93fc-1540a41dc0e9"]
}, Open  ]],
Cell[443432, 10015, 320, 7, 58, "Text",ExpressionUUID->"04ccd279-ccb3-4c68-9c70-667e2115a818"],
Cell[CellGroupData[{
Cell[443777, 10026, 487, 14, 28, "Input",ExpressionUUID->"2b083a49-762b-4d2f-822f-526efd39382e"],
Cell[444267, 10042, 233, 5, 32, "Output",ExpressionUUID->"798b4e45-07d0-4b4d-a54b-0e007376c303"]
}, Open  ]],
Cell[444515, 10050, 301, 6, 58, "Text",ExpressionUUID->"ea3b5837-4198-4b53-9a67-687c471908da"],
Cell[444819, 10058, 769, 23, 86, "Input",ExpressionUUID->"1d0866fb-87f2-4da6-a51c-7a3195509557"],
Cell[445591, 10083, 644, 14, 104, "Text",ExpressionUUID->"65d9f108-347b-4ced-a4ab-f6effae09215"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446272, 10102, 154, 3, 67, "Section",ExpressionUUID->"5b1cf704-9cb7-4fbe-a850-0602be74857a"],
Cell[446429, 10107, 437, 8, 58, "Text",ExpressionUUID->"49952909-5b88-4116-8ca4-c402bc7d9f48"],
Cell[446869, 10117, 2812, 82, 276, "Input",ExpressionUUID->"ce9d4512-86ca-4b63-9eb8-0f34fcc3afc0"],
Cell[449684, 10201, 445, 15, 58, "Text",ExpressionUUID->"b2ad5da0-d1cc-4fbd-bd39-52b88d3ba6df"],
Cell[450132, 10218, 1041, 20, 150, "Text",ExpressionUUID->"22d1e2e8-faf7-444d-9bc2-1678dffc3b22"],
Cell[451176, 10240, 418, 12, 81, "Text",ExpressionUUID->"bafb993e-7f04-44dc-b03f-8d8feac37b5c"],
Cell[CellGroupData[{
Cell[451619, 10256, 259, 6, 28, "Input",ExpressionUUID->"208b8b06-2c15-4e31-82c8-2067a6ab9893"],
Cell[451881, 10264, 1691, 58, 65, "Output",ExpressionUUID->"612754a6-206b-471b-bacf-ca975c202a60"]
}, Open  ]],
Cell[453587, 10325, 640, 15, 104, "Text",ExpressionUUID->"57a412fe-7360-4803-a633-3fdf19c0dd60"],
Cell[454230, 10342, 360, 7, 81, "Text",ExpressionUUID->"adf4f530-e059-4a09-9927-913ee0d526b8"],
Cell[454593, 10351, 762, 22, 67, "Input",ExpressionUUID->"32f36efd-b257-40b5-be6f-a4c7bf077d71"],
Cell[455358, 10375, 348, 7, 81, "Text",ExpressionUUID->"35d01e62-f75a-4418-a371-4c9af7777709"],
Cell[455709, 10384, 371, 10, 28, "Input",ExpressionUUID->"4f867ef0-a11e-435e-ade6-4da1cca1629e"],
Cell[CellGroupData[{
Cell[456105, 10398, 362, 9, 28, "Input",ExpressionUUID->"f4fb99ee-326b-4e29-957d-3489c89af5ca"],
Cell[456470, 10409, 352, 8, 32, "Output",ExpressionUUID->"5b3da796-d2eb-496b-ba40-18537bf0dd09"]
}, Open  ]],
Cell[456837, 10420, 361, 7, 81, "Text",ExpressionUUID->"e6df5913-f545-46f8-8b9c-fa6be123f06b"],
Cell[CellGroupData[{
Cell[457223, 10431, 240, 5, 28, "Input",ExpressionUUID->"52bb33dd-d00a-4973-8222-88d2e132e5e2"],
Cell[CellGroupData[{
Cell[457488, 10440, 405, 14, 22, "Print",ExpressionUUID->"9728e366-7514-48dd-b4c7-d001957b0aa3"],
Cell[457896, 10456, 368, 12, 22, "Print",ExpressionUUID->"0cfd80da-a591-4484-9af7-1bd8762ea055"],
Cell[458267, 10470, 353, 12, 22, "Print",ExpressionUUID->"cb381616-cc02-4a4d-8054-dc35c705c22c"],
Cell[458623, 10484, 816, 25, 22, "Print",ExpressionUUID->"3d086887-a2be-432c-911b-631e3a249d62"],
Cell[459442, 10511, 380, 12, 22, "Print",ExpressionUUID->"97dfa87a-4f84-4721-813e-1b07d035c0a3"],
Cell[459825, 10525, 385, 13, 22, "Print",ExpressionUUID->"68b5326f-f9c2-4808-be90-ce8504f51b6f"],
Cell[460213, 10540, 367, 12, 22, "Print",ExpressionUUID->"7e46ac1f-758e-4173-b943-036a4e72b34b"],
Cell[460583, 10554, 355, 12, 22, "Print",ExpressionUUID->"805d7980-0c75-4778-8b9b-9881e13088fd"],
Cell[460941, 10568, 355, 12, 22, "Print",ExpressionUUID->"27f65929-634d-49d1-8242-6fec5ee02163"],
Cell[461299, 10582, 362, 12, 22, "Print",ExpressionUUID->"56720cbc-056e-4258-998a-de55d4057925"],
Cell[461664, 10596, 791, 24, 22, "Print",ExpressionUUID->"af35b83a-8668-4058-89bb-908ea7463720"],
Cell[462458, 10622, 678, 21, 22, "Print",ExpressionUUID->"4d1a2278-d3b0-47ae-9c18-02e575d70f33"],
Cell[463139, 10645, 380, 12, 22, "Print",ExpressionUUID->"2167c450-2ad0-498c-93a8-71572abaef19"],
Cell[463522, 10659, 537, 17, 22, "Print",ExpressionUUID->"0d3aa662-8bff-4d4c-92cb-d6f3915112d2"],
Cell[464062, 10678, 359, 12, 22, "Print",ExpressionUUID->"afcf7baa-9c2c-4b1b-a9bd-39193a9608c9"],
Cell[464424, 10692, 436, 15, 22, "Print",ExpressionUUID->"2a7423e4-49a1-4c86-9898-1fa70de5bfd2"],
Cell[464863, 10709, 369, 12, 22, "Print",ExpressionUUID->"d5398355-bc51-4679-8154-3b0e5a25ee2f"],
Cell[465235, 10723, 385, 13, 22, "Print",ExpressionUUID->"2c9be216-c658-45c5-87a6-964b17701419"],
Cell[465623, 10738, 363, 12, 22, "Print",ExpressionUUID->"91314082-ae2c-486c-b7f6-9540e6751a49"],
Cell[465989, 10752, 357, 12, 22, "Print",ExpressionUUID->"698e82f9-4833-4e75-ac47-48774a207aef"],
Cell[466349, 10766, 375, 13, 22, "Print",ExpressionUUID->"a3cbe7df-9899-4fcc-b0a0-4e009ffa8314"],
Cell[466727, 10781, 354, 12, 22, "Print",ExpressionUUID->"8e1c5056-bb1e-454e-8841-4e10d302db44"],
Cell[467084, 10795, 404, 14, 22, "Print",ExpressionUUID->"4c389eb4-1e07-4ae3-8598-87815eae5379"],
Cell[467491, 10811, 355, 12, 22, "Print",ExpressionUUID->"aab85840-8a46-4a42-92c6-dc73877a40d5"],
Cell[467849, 10825, 436, 15, 22, "Print",ExpressionUUID->"d6f13050-f6e8-4aed-b4d0-be193fdd8083"],
Cell[468288, 10842, 369, 12, 22, "Print",ExpressionUUID->"199cb36d-71c0-44f8-af9a-db2164aa1ba5"],
Cell[468660, 10856, 385, 13, 22, "Print",ExpressionUUID->"523378c5-4531-4e61-bbda-64497a1697e7"],
Cell[469048, 10871, 363, 12, 22, "Print",ExpressionUUID->"6d3fcee7-2c10-4fc1-8373-110ba7a62388"],
Cell[469414, 10885, 357, 12, 22, "Print",ExpressionUUID->"9df59dff-f2da-4295-969e-0a1cf0541129"],
Cell[469774, 10899, 376, 13, 22, "Print",ExpressionUUID->"2f584bcb-4056-46a1-b184-a6a4ae7bc77c"],
Cell[470153, 10914, 354, 12, 22, "Print",ExpressionUUID->"c46b90c0-47f3-4b07-9876-04b9bb55eff6"],
Cell[470510, 10928, 404, 14, 22, "Print",ExpressionUUID->"0c7072ba-0142-400b-8e55-0ef7320f0687"],
Cell[470917, 10944, 355, 12, 22, "Print",ExpressionUUID->"cc98bc3a-c252-47e2-bd5c-ef5c14cee3fa"],
Cell[471275, 10958, 383, 13, 22, "Print",ExpressionUUID->"79a14aba-7e58-47a3-9fc7-1b1576e7a515"],
Cell[471661, 10973, 354, 12, 22, "Print",ExpressionUUID->"bc754a11-da9b-4e86-8ac8-3d88d04c4da8"]
}, Open  ]],
Cell[472030, 10988, 179, 3, 32, "Output",ExpressionUUID->"e58f9e5c-a6eb-4287-867b-2f164a98d15b"]
}, Open  ]],
Cell[472224, 10994, 351, 9, 58, "Text",ExpressionUUID->"c5e54c76-bf2f-49c6-9de5-047facbf5bb9"],
Cell[472578, 11005, 673, 18, 48, "Input",ExpressionUUID->"6b9d6f9d-5cf5-42c6-a5d5-01c81212cb11"],
Cell[CellGroupData[{
Cell[473276, 11027, 287, 7, 28, "Input",ExpressionUUID->"7aa21122-5ffb-405f-bed4-b056de836d87"],
Cell[473566, 11036, 155, 3, 32, "Output",ExpressionUUID->"156fae11-2b30-4ea4-9ea7-bdddeb3364c6"]
}, Open  ]],
Cell[473736, 11042, 340, 7, 81, "Text",ExpressionUUID->"b256c8db-8230-484e-8e91-e06db4062225"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474113, 11054, 225, 4, 67, "Section",ExpressionUUID->"aabc49ba-d10c-4a93-8776-684025622aaa"],
Cell[474341, 11060, 1400, 21, 219, "Text",ExpressionUUID->"0ffbbea2-a558-4950-b17d-98f468999b96"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475778, 11086, 159, 3, 67, "Section",ExpressionUUID->"cb679f0e-e9e5-4fa2-a320-c3f0335ab6e2"],
Cell[475940, 11091, 1343, 26, 196, "Text",ExpressionUUID->"6ba92103-54f0-4b90-b6f6-2017b83919d5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

